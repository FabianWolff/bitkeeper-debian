.so ../bk-macros
.TH "Basics-Overview" "\*[BKVER]" %E% "\*(BC" "\*(UM"
.SH NAME
bk Basics-Overview \- \*(BK basics to help get a new user started
.SH DESCRIPTION
.LP
This section explains how to make changes to files under revision
control.  If you have not created a package, then see the  
.B bk help setup
section.
.LP
Note that \*(BK supports both the traditional SCCS commands
for checking in/out files
(\c
.QR "admin \-i" ,
.BR delta ,
.BR get )
as well as the RCS
commands 
.RB ( ci ,
.BR co ).
The
.B ci/co
are the preferred interfaces (they stand for "check in" and "check out").
.LP
As an example, go to the directory where you would like to make changes:
.DS
$ cd ~/mypackage/src
.DE
If you are starting a new package, then create new files with any
editor and check them in.  The initial check in for a file that already 
exists will look like this:
.DS
$ bk new coolStuff.c
.DE
If you want to modify an existing file, you can do this:
.DS
$ bk edit coolStuff.c
.DE
Or, if you have multiple files in the directory, you can do the
following to place all files into a state where they can be modified:
.DS
$ bk edit
.DE
If you want to lock the entire tree, including subdirectories, try this:
.DS
$ bk -U edit
.DE
Locking the entire directory is useful when applying patches that
will access many files in a tree.
.LP
Once you are finished making changes to files, you can check in the files
as follows:
.DS
$ bk ci file1 file2 file3
.DE
However, we recommend using the graphical checkin tool which is invoked with 
the following command:
.DS
$ bk citool
.DE
.B bk citool
will help you check in both new, modified, and pending files. 
.SH DOCUMENTATION
.LP
Each command in \*(BK has command-specific help.  You can access
individual help topics by typing:
.DS
$ bk help \*<command\*>		# e.g., "bk help co"
.DE
There are also a number of other topics that describe various areas
in detail. Try
.B bk help
for a listing of help topics.
.SH SEE ALSO
.LP
.SA ci
.SA citool
.SA co
.SA edit
.SA help
.SA new
.SH CATEGORY
.B Overview
