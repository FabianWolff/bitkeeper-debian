Description: Adjust linked libraries
Author: Fabian Wolff <fabi.wolff@arcor.de>
Forwarded: no
Last-Update: 2016-05-15
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/src/libc/Makefile
+++ b/src/libc/Makefile
@@ -20,7 +20,7 @@
 
 include fslayer/Makefile
 include hash/Makefile
-include lz4/Makefile
+# include lz4/Makefile
 include mdbm/Makefile
 include string/Makefile
 include stdio/Makefile
@@ -31,15 +31,15 @@
 include win32/Makefile
 XCPPFLAGS=-Wno-redundant-decls
 endif
-include zlib/Makefile
+# include zlib/Makefile
 
 OBJS = $(FSLAYER_OBJS) $(HASH_OBJS) $(MDBM_OBJS) \
-	$(STRING_OBJS) $(STDIO_OBJS) $(LZ4_OBJS) \
-	$(TCP_OBJS) $(UDP_OBJS) $(UTILS_OBJS) $(WIN32_OBJS) $(ZLIB_OBJS)
+	$(STRING_OBJS) $(STDIO_OBJS) \
+	$(TCP_OBJS) $(UDP_OBJS) $(UTILS_OBJS) $(WIN32_OBJS)
 SRCS = $(OBJS:%.o=%.c)
 HDRS = $(FSLAYER_HDRS) $(HASH_HDRS) $(MDBM_HDRS) \
-	$(STRING_HDRS) $(STDIO_HDRS) $(LZ4_HDRS) \
-	$(TCP_HDRS) $(UDP_HDRS) $(UTILS_HDRS) $(WIN32_HDRS) $(ZLIB_HDRS)
+	$(STRING_HDRS) $(STDIO_HDRS) \
+	$(TCP_HDRS) $(UDP_HDRS) $(UTILS_HDRS) $(WIN32_HDRS)
 
 CC = gcc
 CFLAGS = -fno-builtin -g -O2 -Wall -Wno-parentheses -Wno-char-subscripts -Wno-format-y2k -Wstrict-prototypes -Wchar-subscripts -Wredundant-decls -Wextra -Wno-sign-compare -Wno-unused-parameter -Wdeclaration-after-statement -Wmissing-prototypes
--- a/src/Makefile
+++ b/src/Makefile
@@ -297,18 +297,18 @@
 	b64wrap unb64wrap gzip_b64wrap ungzip_b64wrap
 PSCR	= t/doit t/guitest
 PROGS	= libc/mtst$(EXE)
-LIBS	= libc/libc.a tomcrypt/libtomcrypt.a tommath/libtommath.a
-PCRELIB = gui/tcltk/pcre/local/lib/libpcre.a
+LIBS	= libc/libc.a tomcrypt/libtomcrypt.a tommath/libtommath.a -lz -llz4
+PCRELIB = -lpcre
 DATA	= bkmsg.txt bkhelp.txt \
 	../doc/bk_refcard.ps ../doc/bk_refcard.pdf ../RELEASE-NOTES \
 	dspec-changes dspec-changes-vv dspec-changes-h dspec-changes-hv \
 	dspec-changes-3.2 dspec-changes-4.0 dspec-prs dspec-log
 CONTRIB = gui/ide/emacs/vc-bk.el
-ALL	= PCRE $(LIBS) $(BINS) $(SCRIPTS) $(PSCR) $(XTRA) \
+ALL	= $(LIBS) $(BINS) $(SCRIPTS) $(PSCR) $(XTRA) \
 	$(PROGS) L-clean GUI L-doc $(DATA)
 
-CFLAGS	= $(CC_DEBUG)
-CPPFLAGS= -Ilibc -Itommath -Itomcrypt/src/headers -Igui/tcltk/pcre/local/include
+CFLAGS	= $(CC_DEBUG) -fPIC
+CPPFLAGS= -Ilibc -Itommath -Itomcrypt/src/headers
 # Override this if you don't have it.
 RANLIB	= ranlib
 
@@ -712,8 +712,7 @@
 
 sccs.h: PCRE
 .PHONY: PCRE
-PCRE:
-	$(MAKE) Q=$(Q) -Cgui/tcltk pcre
+PCRE: ;
 
 $(OBJ) bk.o: $(HDRS)
 
--- a/src/libc/utils/crc32c.c
+++ b/src/libc/utils/crc32c.c
@@ -1248,6 +1248,7 @@
 	u32 ecx;
 	u32 edx;
 #ifdef __PIC__
+#ifndef __LP64__
 	// PIC: Need to save and restore ebx See:
 	// http://sam.zoy.org/blog/2007-04-13-shlib-with-non-pic-code-have-inline-assembly-and-pic-mix-well
 	asm("pushl %%ebx\n\t" /* save %ebx */
@@ -1256,7 +1257,16 @@
             "popl %%ebx"
 	    : "=a"(eax), [ebx] "=r"(ebx), "=c"(ecx), "=d"(edx)
 	    : "a" (functionInput)
-            : "cc");
+	    : "cc");
+#else
+	asm("pushq %%rbx\n\t" /* save %ebx */
+            "cpuid\n\t"
+            "movl %%ebx, %[ebx]\n\t" /* save what cpuid just put in %ebx */
+            "popq %%rbx"
+	    : "=a"(eax), [ebx] "=r"(ebx), "=c"(ecx), "=d"(edx)
+	    : "a" (functionInput)
+	    : "cc");
+#endif
 #else
 	asm("cpuid"
 	    : "=a" (eax), "=b" (ebx), "=c" (ecx), "=d" (edx)
--- a/src/gnu/Makefile
+++ b/src/gnu/Makefile
@@ -1,57 +1,7 @@
-_OS=`cat os`
-DIRS=patch diffutils
-EXE=`sh exe`
-PATCH_BIN=patch/$(_OS)/patch$(EXE)
-DIFF_BINS= diffutils/$(_OS)/diff$(EXE) diffutils/$(_OS)/diff3$(EXE) \
-	diffutils/$(_OS)/sdiff$(EXE)  diffutils/$(_OS)/cmp$(EXE)
-BINS=$(PATCH_BIN) $(DIFF_BINS)
-CONFIG=--cache-file=../../config.cache --quiet
-
-# Override Solaris make.rules
-.SCCS_GET:
-	$(Q)bk get -q $@
-
-all: os exe
-	$(Q)PATH="..:../..:$(PATH)"; export PATH; \
-	OS=$(_OS); \
-	for i in $(DIRS); \
-	do	test -d $$i/$$OS || mkdir $$i/$$OS; \
-		( \
-		echo $$i; \
-		unset CFLAGS; \
-		cd $$i; \
-		bk get -Sq; \
-		$(MAKE) -f fixorder.mk; \
-		cd $$OS; test -f Makefile || sh ../configure $(CONFIG); \
-		$(MAKE) Q=$(Q) \
-		); \
-	done
-	$(Q)rm -rf bin
-	$(Q)mkdir bin
-	$(Q)cp $(DIFF_BINS) bin
-	$(Q)cp $(PATCH_BIN) bin/mend$(EXE)
-
-install: all
-	$(Q)if [ X$(BINDIR) = X ]; then echo Must set BINDIR; exit 1; fi
-	$(Q)cp -f $(DIFF_BINS) $(BINDIR)
-	$(Q)cp -f $(PATCH_BIN) $(BINDIR)/mend$(EXE)
-
-os: ../utils/bk_version
-	$(Q)(cd ../utils && ./bk_version) > _os
-	$(Q)echo BIN-`cat _os` > os
-	$(Q)rm -f _os
-
-# win32, can not clean the current Makefile when we are
-# running this make file
-.PHONY: clean
-clean: os
-	$(if $(Q),@echo Cleaning gnu,)
-	-$(Q)OS=$(_OS); \
-	for i in $(DIRS); \
-	do	(cd $$i && rm -rf BIN-* ); \
-	done
-	-$(Q)rm -rf bin
-	$(Q)rm -f os config.cache
-
-clobber: clean
-	-$(Q)bk -r. clean
+.SCCS_GET: ;
+all: ;
+install: ;
+os: ;
+.PHONY: ;
+clean: ;
+clobber: ;
--- a/src/gui/tcltk/Makefile
+++ b/src/gui/tcltk/Makefile
@@ -12,312 +12,44 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-HERE	:= $(shell pwd)
-OSTYPE	:= $(shell bash -c 'echo $$OSTYPE')
-BKROOT	:= $(shell cd ../../.. && pwd)
-
-CC := gcc
-LD := gcc
-STRIP := strip
-export CC LD
-
-# The Tk version is tied to the Tcl version so you only need to change TCL
-TCLVERSION := 8.6
-TCLVERSIONNODOTS := 86
-
-# Machines on which we disable XFT
-NO_XFT := netbsd4 sunx86
-
-ifeq "$(OSTYPE)" "msys"
-	S := win
-	EXE := .exe
-	SO := .dll
-	STRIP := true
-	XFTSUPPORT :=
-	SHARED := --enable-shared
-	PCRE_OBJ:= bin/tcl$(subst .,,$(TCLVERSION)).dll
-else
-	S := unix
-	EXE :=
-	SO  := .so
-	XSSSUPPORT := --disable-xss
-	ifeq (,$(findstring $(HOSTNAME), $(NO_XFT)))
-		XFTSUPPORT := --enable-xft
-	endif
-	SHARED := --disable-shared
-	PCRE_OBJ:= bin/tclsh
-	ifeq "$(shell uname)" "Darwin"
-		AQUA := 1
-		XFTSUPPORT :=
-		BKAPP=bin/BitKeeper.app
-		SO := .dylib
-		SINGLE_MODULE := "LDFLAGS=-single_module"
-	endif
-	ifeq "$(shell uname -m)" "x86_64"
-		ENABLE_64BIT=--enable-64bit
-	endif
-	# Work around for suspected compiler bug on hp-ia64.
-	# Do like a debug build but use -O2.
-	ifeq "$(shell uname -s)" "HP-UX"
-		SYMBOLS="--enable-symbols=all-with-O2"
-	endif
-	# No rpath on freebsd 2.2.8
-	ifeq "$(shell uname -r)" "2.2.8-RELEASE"
-		SHARED := $(SHARED) --disable-rpath
-	endif
-endif
-
-ifdef	DEBUG_TCL
-	SYMBOLS	:= --enable-symbols=all
-endif
-
-ifdef	Q
-	QUIET=-q
-endif
-
-DDEVERSION := 1.3
-REGVERSION := 1.3
-TKTABLE := Tktable2.10
-
-LIBTKTABLE := lib$(TKTABLE)$(SO)
-BWIDGET := BWidget1.8
-TCLBUILD := ../build/tcl/Tcl.framework
-TKBUILD  := ../build/tk/Tk.framework
-WISHPATH := build/tk/Wish.app
-EXTENSIONS := lib/$(TKTABLE)/$(LIBTKTABLE) \
-	      lib/$(BWIDGET)/pkgIndex.tcl \
-	      lib/Tkcon/pkgIndex.tcl
-AQUAEXTENSIONS := $(BKAPP)/Contents/lib/$(TKTABLE)/$(LIBTKTABLE) \
-		  $(BKAPP)/Contents/lib/$(BWIDGET)/pkgIndex.tcl \
-		  $(BKAPP)/Contents/lib/Tkcon/pkgIndex.tcl
-
-ifeq "$(OSTYPE)" "openbsd4.2"
-LIBTCL=$(BKROOT)/src/gui/tcltk/tcl/$S/libtcl$(TCLVERSIONNODOTS).a
-else
-LIBTCL=$(BKROOT)/src/gui/tcltk/tcl/$S/libtcl$(TCLVERSION).a
-endif
-LIBTOMCRYPT=$(BKROOT)/src/tomcrypt/libtomcrypt.a
-TOMMATH=$(BKROOT)/src/tommath
-LIBPCRE=$(BKROOT)/src/gui/tcltk/pcre/local/lib/libpcre.a
-
-all: version.sh
-	$(if $(Q),@echo Building Tcl/Tk,)
-	-$(Q)rm -rf bin lib share
-	$(Q)TCLVER=`./version.sh`; \
-	if [ -n "$$TCLVER" -a -f "$$TCLVER" -a -z "$$FORCE_REBUILD" ]; \
-	then	gunzip < "$$TCLVER" | tar -xf -; true; \
-	else	unset CC LD CCXTRA CFLAGS MAKEFLAGS; \
-		$(MAKE) Q=$(Q) populate ; \
-		$(MAKE) Q=$(Q) bin/tclsh$(EXE) || exit 1; \
-		if [ "X$(AQUA)" = X ] ; \
-		then $(MAKE) Q=$(Q) bin/bkgui$(EXE) $(EXTENSIONS) || exit 1; \
-		else \
-			$(MAKE) Q=$(Q) $(BKAPP)/Contents/MacOS/BitKeeper || exit 1; \
-			$(MAKE) Q=$(Q) $(AQUAEXTENSIONS) || exit 1; \
-		fi \
-	fi
-	$(Q)$(MAKE) verify
-	$(Q)$(MAKE) rm_doc
-	$(Q)$(MAKE) install
-
-srcs: pcre/configure \
-	tcl/$S/configure \
-	tk/$S/configure \
-	tktable/configure \
-	lib/$(BWIDGET)/pkgIndex.tcl \
-	lib/Tkcon/pkgIndex.tcl
-
-src-check: src-check.sh
-	@make -s srcs
-	@./src-check.sh
-
-tcl/$S/Makefile: tcl/$S/configure $(LIBPCRE) Makefile
-	$(if $(Q),@echo Configuring Tcl,)
-	$(Q)cd tcl/$S; \
-	./configure $(QUIET) \
-	    --disable-info-body --enable-pcre=default --with-pcre=../../pcre/local \
-	    $(ENABLE_64BIT) $(SHARED) $(SYMBOLS) \
-	    --with-tommath=$(TOMMATH)
-
-tk/$S/Makefile: tk/$S/configure Makefile
-	$(if $(Q),@echo Configuring Tk,)
-	$(Q)cd tk/$S; \
-	./configure $(QUIET) --with-tcl=../../tcl/$S \
-	    $(ENABLE_64BIT) $(XSSSUPPORT) $(XFTSUPPORT) $(SHARED) $(SYMBOLS)
-
-populate:
-	$(if $(Q), @echo Cloning TclTk repos,)
-	-$(Q) BK_CONFIG='checkout:get!' bk here add $(QUIET) TCLTK || \
-	     BK_CONFIG='checkout:get!' bk here add $(QUIET) \
-		-@bk://data.bitkeeper.com$$_BUILD_PORT/bk TCLTK
+all: ;
+srcs: ;
+src-check: ;
+tcl/$S/Makefile: ;
+tk/$S/Makefile: ;
+populate: ;
 
 CHANGELOGS =  \
-	tcl/ChangeLog \
-	tk/ChangeLog \
 	tktable/ChangeLog \
 	bwidget/ChangeLog \
 	tkcon/ChangeLog
 
-$(CHANGELOGS): populate
+$(CHANGELOGS): ;
 
-# fetch tcl subdirectory if needed
-tcl/$S/configure: tcl/ChangeLog
-	-$(Q)(cd tcl && bk -Ur get -qS)
-
-# fetch tk subdirectory if needed
-tk/$S/configure: tk/ChangeLog
-	-$(Q)(cd tk && bk -Ur get -qS)
-
-pcre: $(LIBPCRE)
-
-$(LIBPCRE): pcre/Makefile Makefile
-	$(if $(Q), @echo Building PCRE,)
-	$(Q)(cd pcre && $(MAKE) && \
-	    $(MAKE) prefix= exec_prefix= DESTDIR="`pwd`"/local/ \
-		libdir=lib bindir=bin includedir=include install)
-
-pcre/Makefile: pcre/configure Makefile
-	$(if $(Q), @echo Configuring PCRE,)
-	$(Q)(cd pcre && \
-	    ./configure $(QUIET) --disable-cpp --disable-shared --enable-utf8=yes --prefix=)
-
-pcre/configure: Makefile
-	-$(Q)(cd pcre && bk -Ur get -qS)
-
-# fetch tktable subdirectory if needed
-tktable/configure:
-	-$(Q)(cd tktable && bk -Ur get -qS)
-
-# Tktable libs
-lib/$(TKTABLE)/$(LIBTKTABLE): tktable/configure bin/bkgui$(EXE)
-	cd tktable ; \
-	test -f Makefile -a "X$(AQUA)" != X && { \
-		$(MAKE) distclean ; \
-	}; \
-	test -f Makefile || { \
-		./configure $(QUIET) --with-tcl=../tcl/$S --with-tk=../tk/$S \
-			--with-tclinclude=../tcl/generic \
-			--with-tkinclude=../tk/generic \
-			--disable-threads $(ENABLE_64BIT) $(SYMBOLS) ; \
-	}; \
-	$(MAKE) $(SINGLE_MODULE) \
-		prefix= exec_prefix= DESTDIR=../ \
-		libdir=lib bindir=bin install
-
-$(BKAPP)/Contents/lib/$(TKTABLE)/$(LIBTKTABLE): tktable/configure
-	cd tktable; \
-	test -f Makefile -a "X$(AQUA)" != X && { \
-		$(MAKE) distclean ; \
-	}; \
-	test -f Makefile || { \
-		./configure $(QUIET) \
-		    --with-tcl=$(TCLBUILD) \
-		    --with-tk=$(TKBUILD) \
-		    --with-tclinclude=$(TCLBUILD)/Headers \
-		    --with-tkinclude=$(TKBUILD)/Headers $(SYMBOLS) ; \
-	}; \
-	$(MAKE) prefix= exec_prefix= DESTDIR=../$(BKAPP)/Contents/ \
-	    libdir=lib bindir=Resources install
-
-$(BKAPP)/Contents/lib:
-	mkdir $(BKAPP)/Contents/lib
-
-lib/$(BWIDGET)/pkgIndex.tcl: bwidget/ChangeLog
-	-$(Q)cd bwidget; bk -Ur get -qS
-	$(if $(Q), @echo Installing BWidget,)
-	$(Q)mkdir -p lib/$(BWIDGET)/lang
-	$(Q)mkdir -p lib/$(BWIDGET)/images
-	$(Q)cp bwidget/*.tcl lib/$(BWIDGET)
-	$(Q)cp bwidget/lang/*.rc lib/$(BWIDGET)/lang
-	$(Q)cp bwidget/images/*.gif lib/$(BWIDGET)/images
-	$(Q)cp bwidget/images/*.xbm lib/$(BWIDGET)/images
-
-$(BKAPP)/Contents/lib/$(BWIDGET)/pkgIndex.tcl: lib/$(BWIDGET)/pkgIndex.tcl \
-	$(BKAPP)/Contents/lib
-	cp -fRPH lib/$(BWIDGET) $(BKAPP)/Contents/lib
-
-lib/Tkcon/pkgIndex.tcl: tkcon/ChangeLog
-	-cd tkcon; bk -Ur get -qS
-	$(if $(Q), @echo Installing TkCon,)
-	$(Q)mkdir -p lib/Tkcon
-	$(Q)cp tkcon/tkcon.tcl lib/Tkcon
-	$(Q)cp tkcon/pkgIndex.tcl lib/Tkcon
-
-$(BKAPP)/Contents/lib/Tkcon/pkgIndex.tcl: lib/Tkcon/pkgIndex.tcl \
-	$(BKAPP)/Contents/lib
-	cp -fRPH lib/Tkcon $(BKAPP)/Contents/lib
-
-$(BKAPP)/Contents/lib/GetOpts/pkgIndex.tcl: lib/GetOpts/pkgIndex.tcl \
-	$(BKAPP)/Contents/lib
-	cp -fRPH lib/GetOpts $(BKAPP)/Contents/lib
-
-rm_doc: FORCE
-	$(Q)rm -rf lib/$(TKTABLE)/html
-	$(Q)if [ "X$(AQUA)" != X ]; \
-	then \
-	    rm -rf \
-		$(BKAPP)/Contents/lib/$(TKTABLE)/html \
-		$(BKAPP)/Contents/man ; \
-	fi
-
-install: ./version.sh
-	$(Q)find bin lib share -type d -print | xargs chmod ug+w
-	$(Q)rm -rf ../bin ../lib ../share 
-	$(Q)tar cf - bin lib share | (cd .. && tar xf -)
-	-$(Q)TCLVER=`./version.sh`; \
-	if [ -n "$$TCLVER" -a \! -f "$$TCLVER" ]; \
-	then	test -d /build/obj || { \
-			mkdir /build/obj; \
-			chmod 777 /build/obj; \
-		}; \
-		tar cf - bin lib share | gzip > "$$TCLVER"; \
-		chmod 666 "$$TCLVER"; \
-	fi
-
-bin/tclsh$(EXE): tcl/$S/Makefile Lversion-L.sh Lversion-C.sh
-	rm -rf bin lib usr include share
-	mkdir include
-	cd tcl && ../Lversion-L.sh >library/Lver.tcl
-	cd tcl && ../Lversion-C.sh >generic/Lver.h
-	cd tcl/$S && \
-	$(MAKE) Q=$(Q) prefix= exec_prefix= INSTALL_ROOT="../.." \
-	    XLIBS="$(LIBTOMCRYPT)" \
-	    install-binaries install-libraries install-L-doc
-	if [ -x bin/tclsh$(TCLVERSION)$(EXE) ] ; then \
-		mv bin/tclsh$(TCLVERSION)$(EXE) bin/tclsh$(EXE) ; \
-	fi
-	if [ ! -x bin/tclsh$(EXE) ] ; then \
-		echo Could not find bin/tclsh$(EXE) ; \
-	fi
-	if [ -d usr/local/lib/dde$(DDEVERSION) ] ; then \
-		mv usr/local/lib/dde$(DDEVERSION) lib/tcl$(TCLVERSION) ; \
-	fi
-	if [ -d usr/local/lib/reg$(REGVERSION) ] ; then \
-		mv usr/local/lib/reg$(REGVERSION) lib/tcl$(TCLVERSION); \
-	fi
-	rm -rf include usr lib/tcl$(TCLVERSION)/tcltest*
-	if [ -z "$(DEBUG_TCL)" ] ; then \
-		$(STRIP) bin/tclsh$(EXE) ; \
-	fi
-
-bin/bkgui$(EXE): tk/$S/Makefile bin/tclsh$(EXE)
-	rm -rf bin/bkgui$(EXE) lib/tk*
-	cd tk/$S && \
-	$(MAKE) prefix= exec_prefix= INSTALL_ROOT=../.. \
-	    XLIBS="$(LIBTOMCRYPT) $(LIBPCRE)" \
-	    BK_TCL_LIB="$(LIBTCL)" \
-	    install-binaries install-libraries
-	rm -rf include usr lib/tk*/images
-	cd lib/tcl$(TCLVERSION)/encoding/; \
-	    mkdir tmp; \
-	    mv ascii.* cp1252.* iso8859-1.* iso8859-2.* macRoman.* tmp; \
-	    rm -f *.enc; \
-	    mv tmp/* .; \
-	    rmdir tmp
-	mv bin/wish* bin/bkgui$(EXE)
-	if [ -z "$(DEBUG_TCL)" ] ; then \
-		$(STRIP) bin/bkgui$(EXE); \
-	fi
+tcl/$S/configure: ;
+tk/$S/configure: ;
+
+pcre: ;
+
+$(LIBPCRE): ;
+pcre/Makefile: ;
+pcre/configure: ;
+
+tktable/configure: ;
+lib/$(TKTABLE)/$(LIBTKTABLE): ;
+$(BKAPP)/Contents/lib/$(TKTABLE)/$(LIBTKTABLE): ;
+$(BKAPP)/Contents/lib: ;
+lib/$(BWIDGET)/pkgIndex.tcl: ;
+$(BKAPP)/Contents/lib/$(BWIDGET)/pkgIndex.tcl: ;
+lib/Tkcon/pkgIndex.tcl: ;
+$(BKAPP)/Contents/lib/Tkcon/pkgIndex.tcl: ;
+$(BKAPP)/Contents/lib/GetOpts/pkgIndex.tcl: ;
+rm_doc: ;
+install: ;
+
+bin/tclsh$(EXE): ;
+
+bin/bkgui$(EXE): ;
 
 mkapp: FORCE
 	-bk get mkapp
@@ -332,13 +64,7 @@
 	./mkapp BitKeeper 1.0 BkAp "BitKeeper Inc" com.bitmover.bk "$(WISHPATH)"
 
 clean-obj: FORCE
-	-test -d tcl && cd tcl/$S && test -f Makefile && $(MAKE) distclean
-	-test -d tk && cd tk/$S && test -f Makefile && $(MAKE) distclean
 	-test -d tktable && cd tktable && test -f Makefile && $(MAKE) distclean
-	-test -d pcre && cd pcre && { \
-		test -f Makefile && $(MAKE) distclean; \
-		rm -rf local; \
-	}
 	-@$(MAKE) clean-config
 
 clean-config: FORCE
@@ -358,19 +84,9 @@
 	-bk clean -q version.sh
 
 test:
-	test -d tk && cd tk/$S && $(MAKE) test
-
-verify: FORCE
-	$(Q)if [ "X$(AQUA)" != X ]; \
-	then \
-	    test -d $(BKAPP)/Contents/lib/$(TKTABLE) || exit 1 ; \
-	    test -f $(BKAPP)/Contents/lib/$(BWIDGET)/pkgIndex.tcl \
-		|| exit 1 ; \
-	else \
-		test -d lib/$(TKTABLE) || exit 1 ; \
-		test -f lib/$(BWIDGET)/pkgIndex.tcl || exit 1 ; \
-	fi
+	-test -d tk && cd tk/$S && $(MAKE) test
 
+verify: ;
 FORCE:
 
 .PHONY: all configure
--- a/src/libc/system.h
+++ b/src/libc/system.h
@@ -50,7 +50,7 @@
 #include "mmap.h"
 #include "hash.h"
 #include "mdbm/mdbm.h"
-#include "zlib/zlib.h"
+#include <zlib.h>
 
 #define	FREE(x)	do { if (x) { free(x); (x) = 0; } } while (0)
 #ifndef	isascii
--- a/src/libc/utils/fopen_vzip.c
+++ b/src/libc/utils/fopen_vzip.c
@@ -15,7 +15,7 @@
  */
 
 #include "system.h"
-#include "lz4/lz4.h"
+#include <lz4.h>
 
 /*
  * GZIP wrapper.  This is closer to the application than the CRC layer,
--- a/src/crypto.c
+++ b/src/crypto.c
@@ -21,7 +21,7 @@
 #include "tomcrypt/randseed.h"
 #include "tomcrypt/oldrsa.h"
 #include "cmd.h"
-#include "zlib/zlib.h"
+#include <zlib.h>
 
 private	int	make_keypair(int bits, char *secret, char *public);
 private	int	signdata(rsa_key *secret);
