# Copyright 1999-2000,2005-2006 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Create initial repository ...................................$NL
commercial P1
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if bk _test ! -f SCCS/s.ChangeSet; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK
echo $N Create some data ............................................$NL
echo foo > foo
bk new $Q foo
bk commit $S -ywhatever
echo OK
echo $N Create a copy of the project ................................$NL
cd "$HERE"
bk clone $Q P1 P2
if [ ! -d P2 ]; then echo failed to make top level directory; exit 1; fi
cd P2
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if bk _test ! -f SCCS/s.ChangeSet; then echo failed to make ChangeSet; exit 1; fi
if [ ! -f BitKeeper/log/parent ]; then echo failed to record parent; exit 1; fi
echo OK
echo $N Create series of deltas to the same file quickly ............$NL
cd "$HERE"
for i in 1 2 3 4 5 6 7 8 9 0
do	bk get $Q -e P1/foo P2/foo
	echo $i >> P1/foo
	echo $i >> P2/foo
	bk delta $Q -y$i P1/foo
	bk delta $Q -y$i P2/foo
done
bk prs -r1.2.. -hd':I: :KEY:' P1/foo | while read rev key
do	echo "$key" > A.$rev
	K=`bk prs -hr$rev -d:KEY: P2/foo`
	echo "$K" > B.$rev
done
for i in `bk prs -r1.2.. -hd:I: P1/foo`
do	cmp -s A.$i B.$i
	if [ $? -eq 0 ]
	then	echo failed on $i; exit 1
	fi
done
echo OK
echo $N Create changesets quickly ...................................$NL
cd P1
bk commit $Q -ywhatever
cd ../P2
bk commit $Q -ywhatever
cd ..
A=`bk prs -hr+ -d:KEY: P1/ChangeSet`
B=`bk prs -hr+ -d:KEY: P2/ChangeSet`
if [ "$A" = "$B" ]
then	echo failed to create different keys; exit 1
fi
echo OK
echo $N Create files quickly ........................................$NL
for f in a b c d e f g h i j k
do	echo blech > "$HERE/P1/"$f
	echo blech > "$HERE/P2/"$f
	# XXX _ this is a bug, the proj is not init-ed
	#bk new $Q "$HERE/P1/"$f
	#bk new $Q "$HERE/P2/"$f
	cd "$HERE/P1"
	bk new $Q $f
	cd "$HERE/P2"
	bk new $Q $f
done
for f in a b c d e f g h i j k
do	A=`bk prs -hr1.1 -d:UTC: "$HERE/P1/"$f`
	B=`bk prs -hr1.1 -d:UTC: "$HERE/P2/"$f`
	if [ $A = $B ]
	then	echo Same timestamp $A for $f@1.1
		bk _cp "$HERE/P1/SCCS/s."$f A
		bk _cp "$HERE/P2/SCCS/s."$f B
		sdiff -w80 A B
		exit 1
	fi
	A=`bk prs -hr1.0 -d:UTC: "$HERE/P1/"$f`
	B=`bk prs -hr1.0 -d:UTC: "$HERE/P2/"$f`
	if [ $A = $B ]
	then	echo Same timestamp $A for $f@1.0
		bk _cp "$HERE/P1/SCCS/s."$f A
		bk _cp "$HERE/P2/SCCS/s."$f B
		sdiff -w80 A B
		exit 1
	fi
done
echo OK
