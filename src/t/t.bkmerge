# Copyright 2015-2016 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# BK MERGE means using the MPARENT instead of -i and -x when computing
# the active set with serialmap.

echo $N Canonical duplicate bookkeeping .............................$NL
# If N dups, then keep minimum to mark dup.
commercial project
touch foo bar
bk new $Q foo bar
bk edit $Q -x1.1,1.1,1.1 foo
bk edit $Q -i1.1,1.1,1.1 bar
bk delta $Q -fyfoo foo bar
bk prs -r+ -hnd":GFILE: :DI:" foo bar > GOT
cat <<EOF > WANT
foo -2,2,2
bar +2,2,2
EOF
cmpfiles WANT GOT
# Flip the storage form
grep -v BKMERGE BitKeeper/log/features > f
cp f BitKeeper/log/features
_BK_DEVELOPER= bk repocheck $Q
bk prs -r+ -hnd":GFILE: :DI:" foo bar > GOT
cmpfiles WANT GOT
# Flip the storage form back
echo BKMERGE >> BitKeeper/log/features
_BK_DEVELOPER= bk repocheck $Q
bk prs -r+ -hnd":GFILE: :DI:" foo bar > GOT
cmpfiles WANT GOT
echo OK

echo $N See that sending side matches receiving side with patch .....$NL
bk commit $Q -f
bk clone $Q --no-bk-merge . ../copy
bk parent $Q ../copy
cd ../copy
bk edit $Q foo
bk delta $Q -fynull foo
bk commit $Q -f
bk tag $Q ONE
bk edit $Q foo
bk delta $Q -fynull foo
bk commit $Q -f
cd ../project
touch baz
bk edit $Q foo
bk delta $Q -fynull foo
bk commit $Q -f
bk pull $Q -rONE
bk features | grep -q BKMERGE || fail
_BK_FORCE_REPACK=1 bk repocheck -q
bk _heapdump -s ChangeSet | grep -i unused | sed 's/ *[^ ]*%$//' > WANT
bk pull $Q -R
# local BKMERGE; remote SCCS Merge bookkeeping - patch - BKMERGE
echo "# Patch features:	BKMERGE" > want-mode
head -2 PENDING/* | tail -1 > got-mode
cmpfiles want-mode got-mode
bk --cd=RESYNC _heapdump -s ChangeSet \
    | grep -i unused | sed 's/ *[^ ]*%$//' > GOT
cmpfiles WANT GOT
echo OK

echo $N Reverse the polarity of previous test .......................$NL
cd ../copy
bk features | grep -q BKMERGE && fail
bk pull $Q -R
echo "# Patch type:	REGULAR" > want-mode
head -2 PENDING/* | tail -1 > got-mode
cmpfiles want-mode got-mode
echo OK
