# Copyright 2009-2010,2014-2016 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Setup .......................................................$NL
cd "$HERE"
commercial standalone1
echo file1 >file1
bk new -q -b file1 || fail
bk commit -q -y'add file1' || fail
cd "$HERE"
commercial standalone2
cd "$HERE"
nested nested1
bk attach --force -q "$HERE/standalone1" component1 || fail
cd "$HERE"
nested nested2
cd "$HERE"
bk bkd -q -aPORT -ikill || fail
P=`cat PORT`
trap "bk _kill bk://localhost:$P" 0
echo OK

echo $N Test non-local source error .................................$NL
cd "$HERE/nested1"
bk detach bk://localhost/file ../bad 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'source must be local' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test detaching a stand-alone repo error, local dest .........$NL
cd "$HERE/nested1"
bk clone -q ../standalone1 || fail
bk detach standalone1 bad 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'can detach only a component' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test detaching a stand-alone repo error, remote dest ........$NL
cd "$HERE/nested1"
bk detach standalone1 bk://localhost/bad 2>GOT && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'can detach only a component' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Test destination repo already there error ...................$NL
cd "$HERE/nested1"
bk detach component1 ../standalone1 2>GOT 1>&1 && {
	echo should have failed
	cat GOT
	exit 1
}
grep -q 'standalone1 exists and is not empty' GOT || {
	echo unexpected output
	cat GOT
	exit 1
}
echo OK

echo $N Basic detach functionality ..................................$NL
bk detach -q component1 ../detached1 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
# Check that component1 is still in the product.
bk comps | grep -q component1 || fail
cd component1 || fail
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd ..
# Check that a new repo was detached.
cd ../detached1 || {
	echo could not cd to detached 1
	exit 1
}
test -f BitKeeper/log/COMPONENT && {
	echo COMPONENT file not removed by detach
	exit 1
}
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd ..
echo OK

echo $N Compare keys between repos ..................................$NL
cd "$HERE"/nested1/component1
bk prs -hnd:KEY: ChangeSet | sed 's/component1\///' > "$HERE"/longkey.comp
bk prs -hnd:MD5KEY: ChangeSet > "$HERE"/md5key.comp
cd "$HERE"/detached1
bk prs -hnd:KEY: ChangeSet > "$HERE"/longkey.det
bk prs -hnd:MD5KEY: ChangeSet > "$HERE"/md5key.det
cd "$HERE"
cmpfiles longkey.det longkey.comp
cmpfiles md5key.det md5key.comp
echo OK

echo $N Basic detach functionality staying inside product ...........$NL
cd nested1
bk detach $Q component1 inside-prod || fail
bk _rm -fr inside-prod
cd ..
echo OK

echo $N Check clone of detached repo ................................$NL
bk clone -q detached1 detached1-clone || {
	echo could not clone detached repo
	exit 1
}
cd detached1-clone
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd ..
echo OK

echo $N Check re-attaching a detached repo ..........................$NL
# You wouldn't necessarily do this normally in practice, but it
# helps check that a detached repo isn't totally messed up.
cd "$HERE/nested1"
bk attach --force -q ../detached1 reattached1 || fail
bk detach -q reattached1 ../detached1b || fail
bk attach --force -q ../detached1b reattached2 || fail
echo OK

echo $N Check clone -r of detached repo .............................$NL
cd "$HERE"
bk clone -q -r1.1 detached1 detached1-clone-1.1 || {
	echo could not clone -r1.1 detached repo
	exit 1
}
echo OK

echo $N Check 'detach <path>' functionality ...........................$NL
cd "$HERE"
bk detach -q "$HERE/nested1/component1" 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
cd "$HERE/nested1"
bk comps | grep -q component1 || fail
cd component1 || fail
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd "$HERE/component1" || fail
test -f BitKeeper/log/COMPONENT && {
	echo COMPONENT file not removed by detach
	exit 1
}
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd ..
echo OK

echo $N Check 'detach <path> <dir>' functionality .....................$NL
cd "$HERE"
bk detach -q "$HERE/nested1/component1" detached2 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
cd "$HERE/nested1"
bk comps | grep -q component1 || fail
cd component1 || fail
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd "$HERE/detached2" || fail
test -f BitKeeper/log/COMPONENT && {
	echo COMPONENT file not removed by detach
	exit 1
}
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd ..
echo OK

echo $N Check 'detach <path> <path>' functionality ....................$NL
cd "$HERE"
bk detach -q "$HERE/nested1/component1" "$HERE/detached3" 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
cd "$HERE/nested1"
bk comps | grep -q component1 || fail
cd component1 || fail
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd "$HERE/detached3" || fail
test -f BitKeeper/log/COMPONENT && {
	echo COMPONENT file not removed by detach
	exit 1
}
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd ..
echo OK

echo $N Check 'detach <dir> <remote>' functionality ...................$NL
cd "$HERE/nested1"
bk detach -q component1 bk://localhost:$P/detached4 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
cd "$HERE/nested1"
bk comps | grep -q component1 || fail
cd component1 || fail
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd "$HERE/detached4" || fail
test -f BitKeeper/log/COMPONENT && {
	echo COMPONENT file not removed by detach
	exit 1
}
bk cat file1 >GOT || fail
cat <<EOF >WANT
file1
EOF
cmpfiles GOT WANT
cd ..
echo OK

echo $N Check detach -r .............................................$NL
cd "$HERE/nested1"
bk detach -q -r1.1 component1 ../standalone1-1.1 2>GOT 1>&2 || {
	echo should have worked
	cat GOT
	exit 1
}
bk comps | grep -q component1 || fail
cd "$HERE/standalone1-1.1" || fail
test "`bk log -d:REV: -r+ ChangeSet`" = "1.1" || {
	echo bad rev
	exit 1
}
echo OK

echo $N Check keys are same except for pathnames.....................$NL
cd "$HERE/nested1/component1"
bk changes -Snd:REV:-:KEY: -r1.0.. |
	sed 's,|component1/ChangeSet|,|ChangeSet|,' > "$HERE/WANT"
cd "$HERE/detached4"
bk changes -nd:REV:-:KEY: -r1.0.. > "$HERE/GOT"
cd "$HERE"
cmpfiles WANT GOT
echo OK
