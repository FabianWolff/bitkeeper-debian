# Copyright 2012,2015 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Mirror from a trigger asynchronously.........................$NL
nested product
mkdir BitKeeper/triggers
cat > BitKeeper/triggers/post-incoming <<EOF
#!/bin/sh

if [ -d "$HERE/mirror" ];
then
	(
	  trap '' SIGHUP
	  bk lock -U
	  bk push "$HERE/mirror"
	) > "$HERE/OUT" 2>&1 &
else
	(
	  trap '' SIGHUP
	  bk lock -U
	  bk clone . "$HERE/mirror"
	) > "$HERE/OUT" 2>&1 &
fi
echo \$! > "$HERE/PID"
EOF
chmod +x BitKeeper/triggers/post-incoming
cd "$HERE"
bk clone $Q product copy
cd copy
touch newfile
bk new $Q newfile
bk commit $Q -y"add newfile"
bk push > OUT 2>&1 || fail
test -f "$HERE/PID" || fail no PID file
PID=`cat "$HERE/PID"`
c=0
while bk _kill -0 $PID
do	bk _usleep 500000
	c=`expr $c + 1`
	test $c = 100 && fail too many retries
done
test -f "$HERE/OUT" || fail
grep -q "ERROR" "$HERE/OUT" && fail -f "$HERE/OUT" trigger failed
test -d "$HERE/mirror" || fail -f "$HERE/OUT"
cd "$HERE/mirror"
bk repocheck -q || fail
rm -f "$HERE/OUT" "$HERE/PID"
# now do another cset so that the trigger pushes
cd "$HERE/copy"
touch again
bk new $Q again
bk commit $Q -y"another"
bk push > OUT 2>&1 || fail -f OUT
test -f "$HERE/PID" || fail
PID=`cat "$HERE/PID"`
c=0
while bk _kill -0 $PID
do	bk _usleep 500000
	c=`expr $c + 1`
	test $c = 100 && fail too many retries
done
test -f "$HERE/OUT" || fail
grep -q "ERROR" "$HERE/OUT" && fail -f "$HERE/OUT" trigger failed
cd "$HERE/mirror"
bk repocheck -q || fail
bk changes -qRL ../product > "$HERE/CHANGES"
test -s "$HERE/CHANGES" && fail -f "$HERE/CHANGES" Changes found
echo OK

