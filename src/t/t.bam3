# Copyright 2007-2011,2015-2016 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#export _BK_TCP_CONNECT_FAIL=1

BK_NO_HARDLINK_CLONE=1
export BK_NO_HARDLINK_CLONE

echo $N Create initial repository ...................................$NL
for f in 1 2 3 4 5 6 7 8 9
do	echo $f > F$f
	perl -e 'printf "a\000b\n"' >> F$f
done
commercial pmaster
bk bam server $Q . || fail
echo OK

echo $N Create some binary data and check BAM .......................$NL
cp "$HERE"/F1 bin.data
bk new $Q bin.data
cp ../F1 copy
bk new $Q copy
bk commit $Q -ybindata
test -d BitKeeper/BAM || fail
echo OK

echo $N Make sure that clone copies the BAM pool ....................$NL
cd "$HERE"
bk clone $Q -Bnone pmaster clone
cd clone
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is missing
done > OUT 2>&1
test -f BitKeeper/log/BAM || echo BitKeeper/log/BAM >> OUT
test -s OUT && fail -f OUT
echo OK

echo $N Make sure that clone w/ server does not copy BAM pool .......$NL
cd "$HERE"
bk clone $Q pmaster clone2
cd clone2
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x && echo $x is present
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i is not present
done >> OUT
test -s OUT && fail -f OUT
echo OK

echo $N Make sure that clone w/ diff server does not copy BAM pool ..$NL
cd "$HERE"
bk clone $Q -B"$HERE"/clone pmaster clone3
cd clone3
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x && echo $x is present
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i is not present
done >> OUT
test -s OUT && fail -f OUT
echo OK

echo $N Make sure that clone w/ empty server copies BAM pool ........$NL
cd "$HERE"
bk clone -B"$HERE/clone2" $Q pmaster clone4 || fail
cd clone4
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is missing
done > OUT 2>&1
test -f BitKeeper/log/BAM || echo BitKeeper/log/BAM >> OUT
test -s OUT && {
	cat OUT > ERR
	find BitKeeper -type f -print >> ERR
	fail -f ERR
}
echo OK

echo $N Make sure that lclone copies the BAM pool ...................$NL
cd "$HERE"
rm -rf clone
BK_NO_HARDLINK_CLONE= bk clone $Q -l pmaster clone || fail
cd clone
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is missing
done > OUT 2>&1
test -f BitKeeper/log/BAM || echo BitKeeper/log/BAM >> OUT
test -s OUT && {
	cat OUT > ERR
	find BitKeeper -print >> ERR
	fail -f ERR
}
echo OK

# XXX rclone

echo $N Make sure that rclone copies the BAM pool ...................$NL
cd "$HERE"
bk bkd -d -aPORT -ikill -l"$HERE/XXX" || fail
P=`cat PORT`
bk clone $Q -B. pmaster bk://localhost:$P/rclone
bk _kill bk://localhost:$P || fail
cd rclone || fail
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is missing
done > OUT 2>&1
test -f BitKeeper/log/BAM || echo BitKeeper/log/BAM >> OUT
test -s OUT && {
	cat OUT > ERR
	cat "$HERE/XXX" >> ERR
	fail -f ERR
}
echo OK

echo $N Make sure that rclone of server does not copy BAM pool ......$NL
cd "$HERE"
rm -f XXX
bk bkd -d -aPORT -ikill -l"$HERE/XXX" || fail
P=`cat PORT`
bk clone $Q -Bbk://localhost:$P/pmaster pmaster bk://localhost:$P/rclone2
cd rclone2 || fail
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x && echo $x is present
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i should be present
done >> OUT
test -s OUT && {
	cat OUT > ERR
	cat "$HERE/XXX" >> ERR
	fail -f ERR
}
echo OK

echo $N Make sure we can get the data after the fact ................$NL
cd "$HERE/rclone2"
bk -r co $Q 
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is not found
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i should be present
done >> OUT
test -s OUT && fail -f OUT
bk _kill bk://localhost:$P || fail
echo OK

echo $N Make sure that rclone w/ diff server does not copy BAM pool .$NL
cd "$HERE"
bk bkd -d -aPORT -ikill -l"$HERE/XXX" || fail
P=`cat PORT`
bk clone $Q -Bbk://localhost:$P/rclone pmaster bk://localhost:$P/rclone3
cd rclone3 || fail
(cd ../rclone && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x && echo $x is present
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i should be present
done >> OUT
test -s OUT && {
	cat OUT > ERR
	cat "$HERE/XXX" >> ERR
	fail -f ERR
}
echo OK

echo $N Make sure we can get the data after the fact ................$NL
cd "$HERE/rclone3"
bk -r co $Q 
(cd ../pmaster && find BitKeeper/BAM -type f -print ) |
while read x
do	test -f $x || echo $x is not found
done > OUT 2>&1
for i in BitKeeper/log/BAM
do	test -f $i || echo $i should be present
done >> OUT
test -s OUT && fail -f OUT
bk _kill bk://localhost:$P || fail
echo OK

echo $N Clone using bk:// of repo with file url bam server ..........$NL
cd "$HERE"
bk changes -qnd:REV: -r+ bk://data.bitkeeper.com/test_data/file-url-abs-path >OUT 2>ERR
if [ $? -eq 0 ]
then
test `cat OUT` = 1.5 || fail
cat ERR
echo "binary data" > WANT
# BAM server repo on work: /home/bk/test_data/bk-url-only
# has 700 perms and is owned by user bkd (which owns the bkd process on work)
# It can only be accessed through bkd even though it is NFS mounted.
# XXX: not true - perms are not 700 and BAM serves fine with file://
#
# The /home/bk/test_data file-url* repos have file urls pointing to
# bk-url-only since they were made with a file clone by user bkd.
#
# Different ways of cloning can leave different BAM server path formats
# See the README files in the /home/bk/test_data/file-url* repos for
# details.  Test all the permutations I saw: file:// file:/// and /...
for f in 2-slash 3-slash abs-path; do
	bk clone $Q bk://data.bitkeeper.com/test_data/file-url-$f || fail on $f
	cd file-url-$f || fail on $f
	bk get $Q bam || fail on $f
	cmpfiles ../WANT bam
	cd ..
done
echo OK
else
echo skipped
fi
