# Copyright 2008-2009,2011,2014-2016 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

mkBINs

commercial proj
bk edit $Q BitKeeper/etc/config
echo 'BAM: off!' >> BitKeeper/etc/config

echo $N Trying to check in some binary data .........................$NL
cp "$BIN1" data
perl -e 'sysread(STDIN, $buf, 10240);
syswrite(STDOUT, $buf, 10240);' < data > data2
chmod u+w data data2
touch zero
printf "x" > one
bk new $Q -b zero one data data2 || fail
bk commit -ywhatever $Q || fail
test -d BitKeeper/BAM && fail should not have created BAM dir
# save data for convert test
bk get -kpq data > ../data-1.1
echo OK

echo $N Exclude it and then exclude the exclude then check contents .$NL
bk clean data || fail
bk cset $Q -x+
bk co $Q data
test -s data && fail expected empty data
# save data for convert test
bk get -kpq data > ../data-1.2
bk cset $Q -x+
bk get -kpq data > ../data-1.3
bk clean data || fail
test -f data && fail
bk co $Q data || fail
cmp -s "$BIN1" data || fail failed to retrieve the data
# for later -- look for GONE
bk clone $Q . ../gone
bk clone $Q . ../notgone
echo OK

echo $N Now try and BAM convert it and see what we get ..............$NL
# Restore BAM to config file
echo "BAM:on" >> BitKeeper/etc/config
bk delta $Q -yBAM BitKeeper/etc/config
bk commit $Q -yBAM 
# Compressed cset files had a bug, make sure it doesn't come back.
bk admin -Zgzip ChangeSet || fail
bk bam convert 16k > OUT 2>&1 || fail -f OUT
for i in 1 2 3
do	bk get -kpqr1.$i data > data-1.$i
	cmp data-1.$i ../data-1.$i || touch busted
done
test -f busted && {
	ls -l data-* ../data-* > ERR
	fail -f ERR
}
echo OK

echo $N Make sure that it actually converted data ...................$NL
bk prs -hnd':GFILE: :ENC:' -r+ data > GOT
echo data BAM > WANT
cmpfiles WANT GOT
echo OK

echo $N Check id in file, bk id, dspec ..............................$NL
grep -q 'B:4000:' BitKeeper/log/ROOTKEY || fail -f BitKeeper/log/ROOTKEY
X=`bk id`
case $X in
    *|B:4000:*) ;;
    *) fail;;
esac
X=`bk changes -r+ -nd:ROOTKEY:`
case $X in
    *|B:4000:*) ;;
    *) fail;;
esac
echo OK

echo $N Try and convert to a bigger BAM size, should fail ...........$NL
cd ..
bk clone $Q proj convert
cd convert
bk bam convert 100000 > OUT 2>&1 && fail -f OUT should have failed
grep -q 'BAM size must be less than 16384.' OUT || fail -f OUT
echo OK

echo $N Try and convert a clone to a smaller BAM size than default ..$NL
bk bam convert 8192 > OUT 2>&1 || {
	echo should have worked
	fail -f OUT
}       
echo OK

echo $N Make sure that it actually converted data2 ..................$NL
bk prs -hnd':GFILE: :ENC:' -r+ data2 > GOT
echo data2 BAM > WANT
cmpfiles WANT GOT
echo OK

echo $N Check id in file, bk id, dspec ..............................$NL
grep -q 'B:2000:' BitKeeper/log/ROOTKEY || fail 
X=`bk id`
case $X in
    *|B:2000:*) ;;
    *) fail;;
esac
X=`bk changes -r+ -nd:ROOTKEY:`
case $X in
    *|B:2000:*) ;;
    *) fail;;
esac
echo OK

echo $N Check that pull tells us we have a bam convert mismatch .....$NL
cd ../proj
bk pull ../convert > OUT 2>&1 && {
	echo should have failed
	fail -f OUT
}
grep -q 'destination needs to convert down to 8192' OUT || fail -f OUT
echo OK

echo $N Same thing other direction ..................................$NL
cd ../convert
bk pull ../proj > OUT 2>&1 && {
	echo should have failed
	fail -f OUT
}
grep -q 'source needs to convert down to 8192' OUT || fail -f OUT
echo OK

echo $N Check that push tells us we have a bam convert mismatch .....$NL
cd ../convert
bk push ../proj > OUT 2>&1 && {
	echo should have failed
	fail -f OUT
}
grep -q 'destination needs to convert down to 8192' OUT || fail -f OUT
echo OK

echo $N Same thing, other direction .................................$NL
cd ../proj
bk push ../convert > OUT 2>&1 && {
	echo should have failed
	fail -f OUT
}
grep -q 'source needs to convert down to 8192' OUT || fail -f OUT
echo OK

# This also tests that we don't look at the BAM config
echo $N Do the conversion down, try the push, should be nothing .....$NL
BK_CONFIG='BAM:off!' bk bam convert 8K > OUT 2>&1 || fail -f OUT
bk push ../convert > OUT 2>&1 || fail -f OUT
grep -q 'Nothing to push' OUT || fail -f OUT
# boundary check - one side to 1
bk bam convert 1 > OUT 2>&1 || fail -f OUT
bk push ../convert > OUT 2>&1 && fail -f OUT
grep -q 'destination needs to convert down to 1' OUT || fail -f OUT
# drop other side to one
bk --cd=../convert bam convert 1 > OUT 2>&1 || fail -f OUT
bk push ../convert > OUT 2>&1 || fail -f OUT
grep -q 'Nothing to push' OUT || fail -f OUT
# drop to zero
bk bam convert 0 > OUT 2>&1 || fail -f OUT
bk push ../convert > OUT 2>&1 && fail -f OUT
grep -q 'destination needs to convert down to 0' OUT || fail -f OUT
# drop other side to one
bk --cd=../convert bam convert 0 > OUT 2>&1 || fail -f OUT
bk push ../convert > OUT 2>&1 || fail -f OUT
grep -q 'Nothing to push' OUT || fail -f OUT
echo OK

echo $N Gone file present at the time of the convert should fail ....$NL
cd "$HERE"/gone
bk edit $Q BitKeeper/etc/gone
# stick the key for a present file to be converted into the gone file
bk prs -r+ -hnd:ROOTKEY: data data2 >> BitKeeper/etc/gone
# add bogus things that are in customer's gone file: paths, random delta keys
echo file >> BitKeeper/etc/gone
bk changes -kr+ >> BitKeeper/etc/gone
# add in some works in progress
bk edit $Q data2
echo alkjad > data2
bk bam convert 2k 2> LOG && fail -f LOG
cat <<EOF > WANT
data would be converted but is marked as gone, conversion aborted.
data2 has been modified, needs delta.
EOF
cmpfiles WANT LOG
# This touches timestamp of s.gone in other repos.  XXX in sccs_unedit()
bk unedit BitKeeper/etc/gone data2
echo OK

echo $N Gone file present and absent in convert .....................$NL
# GONE repos gone and notgone created ealier before any converts
bk rm data
bk commit $Q -yrm
# unedit can cause this push to fail -- disable trap
_BK_DEVELOPER= bk push $Q ../notgone || fail
bk _rm -fr BitKeeper/deleted
bk -r check -ag | bk gone $Q -
bk commit $Q -y'mark gone'
bk bam convert 2k 2> LOG || fail -f LOG
cd ../notgone
bk bam convert 2k 2> LOG || fail -f LOG
bk pull -q ../gone 2> ERR && fail -f ERR
grep -q "has had a different transformation" ERR || fail -f ERR
echo OK
