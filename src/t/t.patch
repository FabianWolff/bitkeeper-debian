# Copyright 2002-2003,2005-2006 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Test import of a patch file, look for patch fudge ...........$NL
commercial proj
cat > file <<EOF
Hi mom!
Hi mom!
Hi mom!
Hi mom!
Hi mom!
EOF
bk new $Q file
bk commit $Q -ybaseline
cd "$HERE"
bk clone $Q proj child
cat > PATCH << EOF
===== file 1.1 vs edited =====
--- 1.1/file    Wed May 01 15:32:20 2002
+++ edited/file Wed May 01 15:32:20 2002
@@ -1,5 +1,5 @@
-Hi mom!
-Hi mom!
-Hi mom!
-Hi mom!
-Hi mom!
+Hi Mom!
+Hi Mom!
+Hi Mom!
+Hi Mom!
+Hi Mom!

EOF
export BK_USER=trini BK_HOST=butthead.com
ME=`bk getuser -r`
bk import $Q -Cftpatch PATCH proj
cd proj
export BK_IMPORTER=`bk getuser -r`
bk commit $Q -y'Should be trini@butthead.com[torvalds]'
bk changes -vr+ -nd':HOST:[:IMPORTER:]' | bk undos > GOT
bk undos > ../WANT <<EOF
butthead.com[$ME]
butthead.com[$ME]
EOF
cmp -s GOT ../WANT || {
	echo failed to set the hostname properly
	diff ../WANT GOT
	exit 1
}
# This was the minimal value on May 15th 2002 at about 6pm PST.
test `bk prs -hr+ -nd:FUDGE: file` -gt 1243730 || {
	echo failed to fudge the date
	bk prs -hr+ -nd:FUDGE: file
	exit 1
}
echo OK

echo $N Test import of a patch file, look for user name .............$NL
cd "$HERE"
export BK_USER=trini BK_HOST=headbutt.com
bk import $Q -Cftpatch PATCH child
cd child
export BK_IMPORTER=`bk getuser -r`
bk commit $Q -y'Should be trini@headbutt.com[lm]'
bk changes -vr+ -nd':HOST:[:IMPORTER:]' | bk undos > GOT
bk undos > ../WANT <<EOF
headbutt.com[$ME]
headbutt.com[$ME]
EOF
cmp -s GOT ../WANT || {
	echo failed to set the hostname properly
	diff ../WANT GOT
	exit 1
}
# This was the minimal value on May 15th 2002 at about 6pm PST.
test `bk prs -hr+ -nd:FUDGE: file` -gt 1243730 || {
	echo failed to fudge the date
	bk prs -hr+ -nd:FUDGE: file
	exit 1
}
echo OK

echo $N Test pull of a double imported patch, should automerge ......$NL
unset BK_IMPORTER
unset BK_USER
unset BK_HOST
unset USER
TOP=`bk prs -hr+ -d:I: file`
echo q | bk pull $Q
test -d RESYNC && {
	echo failed to finish pull
	exit 1
}
NTOP=`bk prs -hr+ -d:I: file`
test $TOP = $NTOP && {
	echo failed to create merge delta
	exit 1
}
echo OK

echo $N Test a patch that failed on windows .........................$NL
undoit() {
	perl -pe 'BEGIN {binmode(STDIN); binmode(STDOUT)} chomp;s/;/\r\n/g'
}
cd "$HERE"
mkdir norepo
cd norepo
# The problem was giving a binary (\n) file to a text (\r\n) reading
# process combining with a MS bug which caused tell() to return the
# wrong value.  The fix was to switch 'patch' to always read binary
# The data was distilled from Oscar's test case
#
# Make the file
cat - <<'EOF' | undoit > file.crlf
1;2;5;6;7;8;10;11;12;14;15;17;18;19;20;21;23;24;25;26;27;29;30;
31;32;35;36;37;38;40;41;42;43;46;47;48;49;50;51;53;54;55;56;57;58;
61;62;63;64;65;66;67;68;
EOF
bk undos < file.crlf > file.lf
# Make the end result
cat - <<'EOF' | undoit > want.crlf
3;4;5;6;7;9;10;11;13;14;16;17;18;19;20;22;23;24;25;26;28;29;30;
33;34;35;36;37;39;40;41;44;45;46;47;48;49;50;52;53;54;55;56;59;
60;61;62;63;64;65;66;69;70;
EOF
bk undos < want.crlf > want.lf
# Make the patch
cat - <<'EOF' | undoit > patch.crlf
--- file	Wed Jun 29 15:52:33 2005;
+++ newfile	Wed Jun 29 15:52:33 2005;
@@ -1,53 +1,53 @@;
-1;-2;+3;+4; 5; 6; 7;-8;+9; 10; 11;-12;+13; 14;-15;+16; 17; 18; 19;
 20;-21;+22; 23; 24; 25; 26;-27;+28; 29; 30;-31;-32;+33;+34; 35; 36;
 37;-38;+39; 40; 41;-42;-43;+44;+45; 46; 47; 48; 49; 50;-51;+52; 53;
 54; 55; 56;-57;-58;+59;+60; 61; 62; 63; 64; 65; 66;-67;-68;+69;+70;
EOF
bk undos < patch.crlf > patch.lf
# Test it out
cp file.lf file
cp patch.lf patch
bk patch -s < patch || {
	echo failed
	exit 1
}
checkfiles file want.lf
echo OK

if [ "$PLATFORM" = "WIN32" ]; then
echo $N Try all other end of line combinations: result always lf ....$NL
# file crlf and patch is lf => want is lf
cp file.crlf file
cp patch.lf patch
bk patch -s < patch || {
	echo failed
	exit 1
}
checkfiles file want.lf
# file crlf and patch is crlf => want is lf
cp file.crlf file
cp patch.crlf patch
bk patch -s < patch || {
	echo failed
	exit 1
}
checkfiles file want.lf
# file lf and patch is crlf => want is lf
cp file.lf file
cp patch.crlf patch
bk patch -s < patch || {
	echo failed
	exit 1
}
checkfiles file want.lf
echo OK
fi	# if WIN32
