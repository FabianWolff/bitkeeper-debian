# Copyright 2009 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


test -d "$HERE/home" || mkdir "$HERE/home"
export BK_TEST_HOME="$HERE/home"
OUT="$HERE/out"

echo $N Create some data ............................................$NL
commercial project
mkdir src
cd src
for f in file1 file2 ; do
	echo "this is $f" > $f
	bk ci $Q -i -y'new file' $f || exit 1
done
cd ..
bk commit $Q -y'initial checkin'
echo OK

echo $N click a button by name ......................................$NL
bk guitest > "$OUT" 2>&1 <<'EOF'
	button .b -text "Foo"
	pack .b
	test_buttonPress "Foo"
	exit
EOF
err=$?
test $err -ne 0 -o -s "$OUT" && {
	echo "failed"
	cat "$OUT"
	echo "exited $err; expected 0"
	exit 1
}
echo OK

echo $N click a button by widget path ...............................$NL
bk guitest > "$OUT" 2>&1 <<'EOF'
	button .b -text "Foo"
	pack .b
	test_buttonPress .b
	exit
EOF
err=$?
test $err -ne 0 -o -s "$OUT" && {
	echo "failed"
	cat "$OUT"
	echo "exited $err; expected 0"
	exit 1
}
echo OK

echo $N click a button with a wildcard pattern ......................$NL
bk guitest > "$OUT" 2>&1 <<'EOF'
	button .b -text "Foobar"
	pack .b
	test_buttonPress "Foo*"
	exit
EOF
err=$?
test $err -ne 0 -o -s "$OUT" && {
	echo "failed"
	cat "$OUT"
	echo "exited $err; expected 0"
	exit 1
}
echo OK

echo $N click a button and wait for a timeout .......................$NL
bk guitest > "$OUT" 2>&1 <<'EOF'
	button .b -text "Foobar"
	pack .b
	set ::test_timeout 1000
	test_buttonPress "Foo"
	exit
EOF
err=$?
test $err -ne 99 && {
	echo "failed"
	cat "$OUT"
	echo "exited $err; expected 99"
	exit 1
}
echo OK
