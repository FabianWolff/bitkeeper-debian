# Copyright 1999-2002,2004-2006,2011-2012 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cd "$HERE"	# For Windows
HOST=@bk_regression.bk/`bk gethost -r`
fresh_commercial project
mkdir -p a/b/c
echo 1.1 > a/b/c/Data
bk new -q a/b/c/Data
# D 1.2 93/03/11 00:50:40.000 butthead 2 1  9/2/44
# C added 4.x etc targets
for i in 2 3 4 5 6 7 8 9 10
do	bk co $Q -l a/b/c/Data
	echo 1.$i >> a/b/c/Data
	echo "D 1.$i 20/03/11 00:00:0$i butthead a b c/d/e" > Init
	echo "c Rev $i" >> Init
	echo "------------------------------------------------" >> Init
	bk delta $Q -IInit a/b/c/Data
done
echo $N Checking sccslog with -b option .............................$NL
cat > CMP1 <<EOF
Data 1.10 2020-03-11 00:00:10 butthead${HOST} +1 -0
  Rev 10

Data 1.9 2020-03-11 00:00:09 butthead${HOST} +1 -0
  Rev 9

Data 1.8 2020-03-11 00:00:08 butthead${HOST} +1 -0
  Rev 8

Data 1.7 2020-03-11 00:00:07 butthead${HOST} +1 -0
  Rev 7

Data 1.6 2020-03-11 00:00:06 butthead${HOST} +1 -0
  Rev 6

Data 1.5 2020-03-11 00:00:05 butthead${HOST} +1 -0
  Rev 5

Data 1.4 2020-03-11 00:00:04 butthead${HOST} +1 -0
  Rev 4

Data 1.3 2020-03-11 00:00:03 butthead${HOST} +1 -0
  Rev 3

Data 1.2 2020-03-11 00:00:02 butthead${HOST} +1 -0
  Rev 2



EOF
bk sccslog -b a/b/c/Data | grep -v '^Data 1.[01] ' | grep -v 'BitKeeper file' > CMP2
cmpfiles CMP1 CMP2
echo OK

echo $N Checking sccslog with no options ............................$NL
cat > CMP1 <<EOF
a/b/c/Data 1.10
  2020-03-11 00:00:10 butthead${HOST} +1 -0
  Rev 10

a/b/c/Data 1.9
  2020-03-11 00:00:09 butthead${HOST} +1 -0
  Rev 9

a/b/c/Data 1.8
  2020-03-11 00:00:08 butthead${HOST} +1 -0
  Rev 8

a/b/c/Data 1.7
  2020-03-11 00:00:07 butthead${HOST} +1 -0
  Rev 7

a/b/c/Data 1.6
  2020-03-11 00:00:06 butthead${HOST} +1 -0
  Rev 6

a/b/c/Data 1.5
  2020-03-11 00:00:05 butthead${HOST} +1 -0
  Rev 5

a/b/c/Data 1.4
  2020-03-11 00:00:04 butthead${HOST} +1 -0
  Rev 4

a/b/c/Data 1.3
  2020-03-11 00:00:03 butthead${HOST} +1 -0
  Rev 3

a/b/c/Data 1.2
  2020-03-11 00:00:02 butthead${HOST} +1 -0
  Rev 2

EOF
bk sccslog a/b/c/Data | head -36 | bk undos > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK
echo $N Checking sccslog with -r option..............................$NL
cat > X <<EOF
a/b/c/Data 1.2
  2020-03-11 00:00:02 butthead${HOST} +1 -0
  Rev 2

EOF
bk undos X > CMP1
bk sccslog -r1.2 a/b/c/Data | bk undos > CMP2
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK
echo $N Checking sccslog with -c option..............................$NL
cat > X <<EOF
a/b/c/Data 1.10
  2020-03-11 00:00:10 butthead${HOST} +1 -0
  Rev 10

a/b/c/Data 1.9
  2020-03-11 00:00:09 butthead${HOST} +1 -0
  Rev 9

a/b/c/Data 1.8
  2020-03-11 00:00:08 butthead${HOST} +1 -0
  Rev 8

a/b/c/Data 1.7
  2020-03-11 00:00:07 butthead${HOST} +1 -0
  Rev 7

a/b/c/Data 1.6
  2020-03-11 00:00:06 butthead${HOST} +1 -0
  Rev 6

a/b/c/Data 1.5
  2020-03-11 00:00:05 butthead${HOST} +1 -0
  Rev 5

a/b/c/Data 1.4
  2020-03-11 00:00:04 butthead${HOST} +1 -0
  Rev 4

a/b/c/Data 1.3
  2020-03-11 00:00:03 butthead${HOST} +1 -0
  Rev 3

a/b/c/Data 1.2
  2020-03-11 00:00:02 butthead${HOST} +1 -0
  Rev 2

EOF
bk undos X > CMP1
bk sccslog -c20/03..20/04 a/b/c/Data | bk undos > CMP2
cmpfiles CMP1 CMP2
echo OK

#echo $N Checking sccslog with -cDATE -cREV option.....................$NL
#cat > X <<EOF
#a/b/c/Data
#  1.4 2020-03-11 00:00:04 butthead${HOST} +1 -0
#  Rev 4
#
#a/b/c/Data
#  1.3 2020-03-11 00:00:03 butthead${HOST} +1 -0
#  Rev 3
#
#a/b/c/Data
#  1.2 2020-03-11 00:00:02 butthead${HOST} +1 -0
#  Rev 2
#
#EOF
#bk undos X > CMP1
#bk sccslog -c20/03 -c1.4 a/b/c/Data | bk undos > CMP2
#cmp -s CMP1 CMP2
#if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
#echo OK

echo $N Checking sccslog with -f option .............................$NL
bk undos > CMP1 <<EOF
ChangeSet 1.0
  BitKeeper file ${HERE}/project/ChangeSet

ChangeSet 1.1
  Initial repository create

EOF
bk sccslog -f | grep -v bk_regression | bk undos > CMP2
bk diff -iu CMP1 CMP2 || {
	echo Failed
	exit 1
}

bk undos > CMP1 <<EOF
a/b/c/Data 1.0

a/b/c/Data 1.1
  BitKeeper file ${HERE}/project/a/b/c/Data

a/b/c/Data 1.2
  Rev 2

a/b/c/Data 1.3
  Rev 3

a/b/c/Data 1.4
  Rev 4

a/b/c/Data 1.5
  Rev 5

a/b/c/Data 1.6
  Rev 6

a/b/c/Data 1.7
  Rev 7

a/b/c/Data 1.8
  Rev 8

a/b/c/Data 1.9
  Rev 9

a/b/c/Data 1.10
  Rev 10

EOF
bk sccslog -f a/b/c/Data | grep -v bk_regression.bk | bk undos > CMP2
bk diff -i CMP1 CMP2 > /dev/null
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; bk sccslog -f a/b/c/Data; exit 1; fi
echo OK

echo $N Checking sccslog with dspec .................................$NL
bk sccslog -nd':I: :DPN:' a/b/c/Data | bk undos > CMP2
bk undos > CMP1 <<EOF
1.10 a/b/c/Data
1.9 a/b/c/Data
1.8 a/b/c/Data
1.7 a/b/c/Data
1.6 a/b/c/Data
1.5 a/b/c/Data
1.4 a/b/c/Data
1.3 a/b/c/Data
1.2 a/b/c/Data
1.1 a/b/c/Data
1.0 a/b/c/Data
EOF
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi

bk sccslog -f -nd':I: :DPN:' a/b/c/Data | bk undos > CMP2
bk undos > CMP1 <<EOF
1.0 a/b/c/Data
1.1 a/b/c/Data
1.2 a/b/c/Data
1.3 a/b/c/Data
1.4 a/b/c/Data
1.5 a/b/c/Data
1.6 a/b/c/Data
1.7 a/b/c/Data
1.8 a/b/c/Data
1.9 a/b/c/Data
1.10 a/b/c/Data
EOF
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK

echo $N Checking sccslog with sorted path'|'rev output.................$NL
bk sccslog -s a/b/c/Data | bk undos > CMP2
bk undos > CMP1 <<EOF
a/b/c/Data|1.10
a/b/c/Data|1.9
a/b/c/Data|1.8
a/b/c/Data|1.7
a/b/c/Data|1.6
a/b/c/Data|1.5
a/b/c/Data|1.4
a/b/c/Data|1.3
a/b/c/Data|1.2
a/b/c/Data|1.1
a/b/c/Data|1.0
EOF
cmp -s CMP1 CMP2
if [ $? -ne 0 ]; then echo Failed.; diff CMP1 CMP2; exit 1; fi
echo OK

echo $N Check sccslog -AD ...........................................$NL
bk commit $Q -yjunk || fail
bk edit $Q a/b/c/Data || fail
bk delta -f $Q -y'Rev 11' a/b/c/Data || fail
echo 1 > f1
echo 2 > f2
bk new $Q f1 f2 || fail
bk edit $Q f2
bk delta -f $Q -y'Rev 11' f2 || fail
bk -r sccslog -AD > GOT
cat <<EOF > WANT
f2, f1:
  new file
f2, Data:
  Rev 11
EOF
cmpfiles GOT WANT
echo OK
