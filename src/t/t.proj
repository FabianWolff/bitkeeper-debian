# Copyright 2003-2006 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N 'bk new' of two projects from outside any project..............$NL
commercial project1
echo file1 > file1
cd "$HERE"
commercial project2
echo file2 > file1
cd "$HERE"
bk new $Q project1/file1 project2/file1 
if [ $? != 0 ]; then echo Failed - new returned an error; exit 1; fi
cd "$HERE/project1"
if bk _test -f file1 -o \! -f SCCS/s.file1; then
	echo file1 should be checked in
	exit 1
fi
if [ `bk cat file1` != "file1" ]; then
	echo file1 contains wrong stuff
	exit 1
fi
cd "$HERE/project2"
if bk _test -f file1 -o \! -f SCCS/s.file1; then
	echo file1 should be checked in
	exit 1
fi
if [ `bk cat file1` != "file2" ]; then
	echo file1 contains wrong stuff
	exit 1
fi
echo OK

echo $N 'bk new' of two projects from a third project..................$NL
cd "$HERE"
rm -rf project1 project2
commercial project1
echo file1 > file1
cd "$HERE"
commercial project2
echo file2 > file1
cd "$HERE"
commercial project3
echo file3 > file1
bk new $Q ../project1/file1 ../project2/file1 
if [ $? != 0 ]; then echo Failed - new returned an error; exit 1; fi
if bk _test ! -f file1 -o -f SCCS/s.file1; then
	echo file1 shouldn\'t be checked in
	exit 1
fi
cd "$HERE/project1"
if bk _test -f file1 -o \! -f SCCS/s.file1; then
	echo file1 should be checked in
	exit 1
fi
if [ `bk cat file1` != "file1" ]; then
	echo file1 contains wrong stuff
	exit 1
fi
cd "$HERE/project2"
if bk _test -f file1 -o \! -f SCCS/s.file1; then
	echo file1 should be checked in
	exit 1
fi
if [ `bk cat file1` != "file2" ]; then
	echo file1 contains wrong stuff
	exit 1
fi
echo OK

echo $N 'bk prs' of two projects from outside any project..............$NL
cd "$HERE"
bk prs -r+ -nd ':DPN:' project1/file1 project2/file1 > out
if [ $? -ne 0 ]; then echo failed; exit 1; fi
cat > expected <<EOF
======== project1/file1 + ========
file1
======== project2/file1 + ========
file1
EOF
checkfiles out expected
echo OK
echo $N 'bk prs' of two projects from third project....................$NL
cd "$HERE/project3"
bk new $Q file1
bk prs -r+ -nd ':DPN:' ../project1/file1 ../project2/file1 > out
if [ $? -ne 0 ]; then echo failed; exit 1; fi
cat > expected <<EOF
======== ../project1/file1 + ========
file1
======== ../project2/file1 + ========
file1
EOF
checkfiles out expected
echo OK
echo $N 'bk delta' of two projects from outside any project ...........$NL
cd "$HERE"
bk edit $Q project1/file1 project2/file1
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo new1 >> project1/file1
echo new2 >> project2/file1
bk delta $Q -ystuff project1/file1 project2/file1
if [ $? -ne 0 ]; then echo failed; exit 1; fi
cd project1
if bk _test -f file1 -o \! -f SCCS/s.file1; then
	echo file1 should be checked in
	exit 1
fi
if [ "`bk cat file1`" != "file1
new1" ]; then
	echo project1/file1 contains wrong stuff
	exit 1
fi
cd "$HERE/project2"
if bk _test -f file1 -o \! -f SCCS/s.file1; then
	echo file1 should be checked in
	exit 1
fi
if [ "`bk cat file1`" != "file2
new2" ]; then
	echo project2/file1 contains wrong stuff
	exit 1
fi
echo OK
echo $N 'bk delta' of two projects from a third project ...............$NL
cd "$HERE"
bk edit $Q project1/file1 project2/file1
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo morenew1 >> project1/file1
echo morenew2 >> project2/file1
cd project3
bk delta $Q -ystuff2 ../project1/file1 ../project2/file1
if [ $? -ne 0 ]; then echo failed; exit 1; fi
cd "$HERE/project1"
if bk _test -f file1 -o \! -f SCCS/s.file1; then
	echo file1 should be checked in
	exit 1
fi
if [ "`bk cat file1`" != "file1
new1
morenew1" ]; then
	echo project1/file1 contains wrong stuff
	exit 1
fi
cd "$HERE/project2"
if bk _test -f file1 -o \! -f SCCS/s.file1; then
	echo file1 should be checked in
	exit 1
fi
if [ "`bk cat file1`" != "file2
new2
morenew2" ]; then
	echo project2/file1 contains wrong stuff
	exit 1
fi
echo OK
