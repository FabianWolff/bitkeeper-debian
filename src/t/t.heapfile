# Copyright 2013-2016 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Demonstrate commit restoring cset after repack ..............$NL
commercial project
echo hi > foo
bk new $Q foo

# create a 2M comment
perl -e 'print ((("x" x 79) . "\n") x 30000)' > C
bk _mv BitKeeper/etc/SCCS/s.config SAVE
bk commit $Q -YC 2>ERR && fail -f ERR expect failure
bk _mv SAVE BitKeeper/etc/SCCS/s.config
bk _test -f SCCS/2.ChangeSet || fail should have second heap
bk repocheck $Q || fail
bk _test -f SCCS/2.ChangeSet && fail should have repacked
echo OK

echo $N Takepatch does not add to unused heap .......................$NL
bk commit $Q -ysave-foo
bk clone $Q . ../copy
bk admin -fMONOTONIC BitKeeper/etc/config
bk commit $Q -y"One copy of this comment"
cd ../copy
echo '/unused:\s+(\d+)/ && print "$1\n"' > prog
bk _heapdump -s ChangeSet | perl -n prog > WANT
_BK_HEAP_NOREPACK=1 bk pull $Q
bk _heapdump -s ChangeSet | perl -n prog > GOT
cmpfiles WANT GOT
echo OK

echo $N cweave_insert with DANGLING should not add extra heap .......$NL
bk unpull -qsf
bk _heapdump -s BitKeeper/etc/config | perl -n prog > WANT
_BK_HEAP_NOREPACK=1 bk pull $Q
bk _heapdump -s BitKeeper/etc/config | perl -n prog > GOT
cmp -s WANT GOT && fail expected WANT and GOT to be different
echo "failed (bug )"

echo $N should be able to commit with read-only 2.ChangeSet .........$NL
echo 1 > jj
bk new $Q jj
bk commit $Q -yjj || fail
echo 2 > yy
bk new $Q yy
chmod a-w .bk/SCCS/ChangeSet,2
bk commit $Q -yyy || fail
bk _test -w SCCS/2.ChangeSet || fail
echo OK

echo $N Show a pull into a bloated repo will repack .................$NL
cd "$HERE"
echo 'partial_check: on!' >> "$BK_DOTBK/config"
commercial pull-source
touch foo
bk new $Q foo
bk commit $Q -f
bk clone $Q . ../pull-dest
bk edit $Q foo
bk delta $Q -fynull foo
bk commit $Q -f
bk force_repack $Q
SEDSTRING='s/ *unused: *\([^ ]*\).*/\1/p'
WANT=`bk _heapdump -s ChangeSet | sed -n "$SEDSTRING"`
cd ../pull-dest
bk force_repack $Q
# build up some litter
for f in 1 2 3 4 5 6
do	bk -?_BK_HEAP_NOREPACK=1 pull $Q -R
	rm -fr RESYNC PENDING
done
# Stage is set: we want small, and it is now large
BEFORE=`bk _heapdump -s ChangeSet | sed -n "$SEDSTRING"`
test "$WANT" -lt 200 || fail $WANT not less than 200
test "$BEFORE" -gt 500 || fail $BEFORE not greater than 500
# <drum roll>
bk pull $Q || fail
GOT=`bk _heapdump -s ChangeSet | sed -n "$SEDSTRING"`
test "$WANT" -eq "$GOT" || fail $WANT not equal to $GOT
echo OK
