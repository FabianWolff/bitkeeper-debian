# Copyright 2001-2002,2004-2009,2014 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

echo $N Create initial repository ...................................$NL
commercial project
mkdir src
cd src
echo foo > foo.c
echo bar > bar.c
echo h > h.h
bk ci $Q -i foo.c bar.c h.h
if bk _test ! -f SCCS/s.foo.c; then echo failed to create history; exit 1; fi
echo OK

echo $N  "checkout:edit with unedit" ...................................$NL
cd "$HERE/project/BitKeeper/etc"
bk edit $Q config
echo "checkout:edit!" >> config
bk delta $Q -yedit config
cd "$HERE/project/src"
bk edit $Q foo.c
echo new1 >> foo.c
bk unedit foo.c
if [ ! -w foo.c ]; then echo failed; exit 1; fi
bk get $Q -p foo.c > foo.ref
cmp -s foo.ref foo.c
if [ $? -ne 0 ]; then echo failed; exit 1; fi
echo OK

echo $N checkout:edit should not touch unmodified files .............$NL
if [ $PLATFORM = "WIN32" ]; then LSOPT="--full-time"; else LSOPT=""; fi
ls -l $LSOPT foo.c > s1
sleep 2
bk unedit foo.c
ls -l $LSOPT foo.c > s2
cmp -s s1 s2 || {
	echo something changed
	diff -u s1 s2
	exit 1
}
echo OK

echo $N checkout:edit with no gfile should restore the gfile ........$NL
rm foo.c
bk unedit foo.c || fail
test -f foo.c || { echo failed no file; exit 1; }
echo OK

echo $N checkout:edit with -x+ and no gfile should clear -x+ ........$NL
bk edit $Q -x+ foo.c
cmp -s foo.c foo.ref && fail
rm foo.c
bk clean $Q foo.c && fail
bk unedit foo.c || fail
test -f foo.c || { echo failed no file; exit 1; }
cmp -s foo.c foo.ref || fail
echo OK

echo $N  checkout:last with unedit on a RW file ......................$NL
bk clean foo.c
bk edit $Q foo.c
echo new1 >> foo.c
BK_CONFIG='checkout:last!' bk unedit foo.c
test -f foo.c -a -w foo.c || {
	echo failed
	exit 1
}
echo OK

echo $N  checkout:last with unedit on a RO file ......................$NL
bk clean foo.c
bk co $Q foo.c
BK_CONFIG='checkout:last!' bk unedit foo.c
test -f foo.c -a ! -w foo.c || {
	echo failed
	exit 1
}
echo OK

########## WIN32 TESTS ##########
if [ $PLATFORM = "WIN32" ]; then
echo $N Passing a full path in stdin should work.....................$NL
cd "$HERE"/project/src
bk clean foo.c
bk edit $Q foo.c
echo new_stuff >> foo.c
WINFOO=$(bk pwd -w "`pwd`")\\foo.c
echo "$WINFOO" | bk unedit - >OUT 2>&1
bk sfiles -cg | grep -q foo.c && {
	echo failed
	cat OUT
	exit 1
}
echo OK

echo $N Unedit a file that is locked ................................$NL
export BK_WIN_NORETRY=0
URL=`bk lock -tkffoo.c`
trap "bk _kill $URL" 0
bk unedit $Q foo.c 2> ERR && fail -f ERR
bk test -f foo.c || fail foo.c should still be here
bk test -f SCCS/p.foo.c || fail SCCS/p.foo.c should still be here
echo OK

fi
