# Copyright 2010 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Test commit -s. in component ................................$NL
nested project
echo junk > file
bk new $Q file
cd gcc
echo junk > file
bk new $Q file
bk commit $Q -ynew -s. || fail
bk changes -r+ -v -nd':DPN:|:I:' >OUT
cat <<EOF > WANT
ChangeSet|1.3
file|1.1
file|1.0
gcc/ChangeSet|1.2
gcc/file|1.1
gcc/file|1.0
EOF
cmpfiles WANT OUT
echo OK

echo $N Test commit -s. -s^PRODUCT in component .....................$NL
bk edit $Q file
echo hh >> file
bk ci $Q -yhh file

bk commit $Q -ynew2 -s. -s^PRODUCT || fail
# product cset unchanged
bk changes -r+ -v -nd':DPN:|:I:' >OUT
cmpfiles WANT OUT

# component is new
bk changes -Sr+ -v -nd':DPN:|:I:' >OUT
cat <<EOF > WANT
ChangeSet|1.3
file|1.2
EOF
cmpfiles WANT OUT
echo OK

echo $N Test using pending files over whole nest ....................$NL
cd ..
bk sfiles -pAC > pending
bk commit $Q -lpending 2>ERR1 && fail -f ERR1 should fail
bk commit $Q - 2>ERR2 < pending && fail -f ERR2 should fail
echo 'commit: Must use -S with -l or "-"' > WANT
cmpfiles ERR1 WANT
cmpfiles ERR2 WANT
echo OK

echo $N Failed commit in component does not commit the product.......$NL
OLDKEY=`bk changes -kr+`
cd gcc
bk edit $Q file
echo new stuff > file
bk ci $Q -y. file
# make commit fail
mkdir -p BitKeeper/triggers
cat <<'EOF' >BitKeeper/triggers/pre-commit
#!/bin/sh
exit 1
EOF
chmod +x BitKeeper/triggers/pre-commit
# make sure commit fails
bk commit $Q -S -yfailed >OUT 2>&1 && fail -f OUT should have failed
cd ../gdb
touch afile
bk new $Q afile
cd ..
touch prod_file
bk new $Q prod_file
bk commit $Q -yfailed >OUT 2>&1 && fail -f OUT should have failed
NEWKEY=`bk changes -kr+`
test "$OLDKEY" = "$NEWKEY" || fail did cset when it should not have
echo OK
