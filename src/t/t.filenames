# Copyright 2000-2006,2009-2010,2014-2015 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Create initial repository ...................................$NL
commercial project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if bk _test ! -f SCCS/s.ChangeSet; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
echo OK
echo $N Create a file with spaces in the name .......................$NL
mkdir src
cd src
echo foo > 'I am foo.c'
echo bar > bar.c
echo h > h.h
bk ci $Q -i 'I am foo.c' bar.c h.h
if bk _test ! -f SCCS/s.'I am foo.c'; then echo failed to create history; exit 1; fi
echo OK
echo $N Commit the files ............................................$NL
bk commit $S -yCset --tag="Hi_there_this-is-a-changeset"
if [ $? != 0 ]; then echo failed; exit 1; fi
echo OK
echo $N Check the repository ........................................$NL
bk -r check -a || { echo failed; exit 1; }
echo OK
echo $N Clone it and make sure the file came along ..................$NL
cd "$HERE"
bk clone $Q project clone || { echo failed; exit 1; }
cd clone/src
bk co $Q
if [ "`cat 'I am foo.c'`" != "foo" ]
then	echo failed to copy file data
	exit 1
fi
echo OK
echo $N Make some changes and check the diffs .......................$NL
bk edit $Q 'I am foo.c'
echo DIFFS >> 'I am foo.c'
bk diffs --no-unified 'I am foo.c' > DIFFS
cat >X <<EOF
===== I am foo.c 1.1 vs edited =====
1a2
> DIFFS
EOF
bk undos X > WANT
cmp -s DIFFS WANT || { echo failed; diff WANT DIFFS; exit 1; }
echo OK
if [ X$BK_TESTGUI != X ]
then	echo $N Try fmtool on the file ......................................$NL
	cat > JUNK <<EOF
Pick everything on the left
and click save, please.
Otherwise this will fail.
EOF
	bk fmtool -geom +1+1 JUNK 'I am foo.c' 'the merge file' || {
		echo failed
		exit 1
	}
	cmp -s JUNK 'the merge file' || {
		echo failed
		diff JUNK 'the merge file'
		sdiff -w50 JUNK 'the merge file'
		exit 1
	}
	echo OK
	echo $N Try difftool on the file ....................................$NL
	bk difftool -geom +1+1 'I am foo.c' || { echo failed; exit 1; }
	echo OK
fi
echo $N Check in the changes ........................................$NL
if [ X$BK_TESTGUI != X ]
then	bk citool
else	bk delta $Q -y'should just be foo'
fi
writable 'I am foo.c' && { echo file is still writable; ls -l; exit 1; }
echo OK
echo $N Check the cset -r1.2 output .................................$NL
bk cset -hr1.2 > GOT
cat > X <<EOF
ChangeSet${BK_FS}ChangeSet${BK_FS}1.2
src/I am foo.c${BK_FS}src/I am foo.c${BK_FS}1.1
src/I am foo.c${BK_FS}src/I am foo.c${BK_FS}1.0
src/bar.c${BK_FS}src/bar.c${BK_FS}1.1
src/bar.c${BK_FS}src/bar.c${BK_FS}1.0
src/h.h${BK_FS}src/h.h${BK_FS}1.1
src/h.h${BK_FS}src/h.h${BK_FS}1.0
EOF
bk undos X > WANT
cmp -s GOT WANT || { echo failed; diff WANT GOT; exit 1; }
echo OK
if [ X$BK_TESTGUI != X ]
then	echo $N Try sccstool on the file ....................................$NL
	bk sccstool 'I am foo.c' || { echo failed; exit 1; }
	echo OK
	echo $N Try csettool on the file ....................................$NL
	bk csettool -geom +1+1 -r1.2 || { echo failed; exit 1; }
	echo OK
fi

GOT_IT=NO
for i in `echo $PATH | sed 's/[:;]/ /g'`
do	if [ -x "$i/co" ]
	then	GOT_IT=YES
		break
	fi
done
if [ $GOT_IT = NO ]
then	exit 0
fi

echo $N "Aaron's file with 2 spaces in the name bug .................."$NL
cd "$HERE"
rm -rf project
commercial project
mkdir src
cd src
echo "foo" > "a a a"
bk new $Q "a a a"
bk commit $Q -yCset
bk edit $Q "a a a"
echo "bar" >> "a a a"
bk delta $Q -y"test" "a a a"
bk commit $Q -yCset
bk -R checksum ChangeSet || { echo checksum failed; exit 1; }
echo OK

echo $N Pull changes with spaces to another repo ....................$NL
cd "$HERE"
bk clone $Q project copy
cd copy
bk undo $Q -fr+ || fail
bk pull -v > /dev/null 2>OUT || {
	echo pull should have worked
	exit 1
}
bk -r check -af || fail
grep -q '^Updating src/a a a' OUT || {
	echo filename wrong in output
	cat OUT
	exit 1
}
echo OK

echo $N Test import of a file with spaces in the name ...............$NL
cd "$HERE"
rm -rf project
commercial project
cd "$HERE"
mkdir -p import_dir/src
echo foo > import_dir/src/'s p a c e s'
touch import_dir/src/boo.c
( echo plain; echo no ) | bk import import_dir project > import.out 2>&1
cd "$HERE/project/src"
bk _test -f SCCS/s.'s p a c e s' || { echo failed; cat "$HERE/import.out"; exit 1; }
bk get $Q 's p a c e s'
cmp -s 's p a c e s' "$HERE/import_dir/src/"'s p a c e s' &&
    bk _test -f SCCS/s.boo.c || { echo failed; exit 1; }
bk get $Q boo.c
cmp -s boo.c "$HERE/import_dir/src/boo.c" || { echo failed; exit 1; }
echo OK

echo $N Test RCS import of a file with spaces in the name ...........$NL
cd "$HERE"
rm -rf project import_dir
commercial project
cd "$HERE"
mkdir -p import_dir/src
cat > import_dir/src/'S P A C E S,v' <<EOF
head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2000.05.25.01.37.15;	author lm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@06:37:07 PM Wed May 24 2000
@
EOF
( echo RCS; echo no ) | bk import import_dir project > import.out 2>&1
cd "$HERE/project/src"
bk _test -f SCCS/s.'S P A C E S' || { echo failed; exit 1; }
test -f 'S P A C E S,v' && {
	echo failed to remove ,v file
	ls
	cat "$HERE/import.out"
	exit 1
}
echo OK

if [ $PLATFORM != "WIN32" ]
then #-----------------------------------------------------------------
echo $N Test RCS import of a file with a backslash in the name ......$NL
cd "$HERE"
rm -rf project import_dir
commercial project
cd "$HERE"
mkdir -p import_dir/src
cat > import_dir/src/'I\ m,v' <<EOF
head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2000.05.25.01.37.15;	author lm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@06:37:07 PM Wed May 24 2000
@
EOF
( echo RCS; echo no ) | bk import import_dir project > import.out 2>&1
cd "$HERE/project/src"
bk _test -f SCCS/s.'I\ m' || { echo failed; exit 1; }
test -f 'I\ m,v' && {
	echo failed to remove ,v file
	ls
	cat "$HERE/import.out"
	exit 1
}
echo OK
fi #-------------------------------------------------------------------

echo $N Test RCS import of a file starting with - ...................$NL
cd "$HERE"
rm -rf project import_dir
commercial project
cd "$HERE"
mkdir -p import_dir/src
cat > import_dir/src/-dash,v <<EOF
head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2000.05.25.01.37.15;	author lm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@06:37:07 PM Wed May 24 2000
@
EOF
( echo RCS; echo no ) | bk import import_dir project > import.out 2>&1
cd "$HERE/project/src"
bk _test -f SCCS/s.-dash || { echo failed; exit 1; }
test -f "-dash,v" && { echo failed to remove ,v file; ls; exit 1; }
echo OK

if [ $PLATFORM != "WIN32" ]
then #-----------------------------------------------------------------
echo $N Test RCS import of a file with double quotes in the name ....$NL
cd "$HERE"
rm -rf project import_dir
commercial project
cd "$HERE"
mkdir -p import_dir/src
cat > import_dir/src/'I"m a little teacup,v' <<EOF
head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2000.05.25.01.37.15;	author lm;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@06:37:07 PM Wed May 24 2000
@
EOF
( echo RCS; echo no ) | bk import import_dir project > import.out 2>&1
cd "$HERE/project/src"
bk _test -f SCCS/s.'I"m a little teacup' || { echo failed; exit 1; }
test -f 'I"m a little teacup,v' && { echo failed to remove ,v file; ls; exit 1; }
echo OK
fi #-------------------------------------------------------------------
