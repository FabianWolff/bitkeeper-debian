# Copyright 2011 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e
echo $N Press checkin twice .........................................$NL
# Currently, resolve uses sfiles -r to ferret out deep nested comp cset
# files in the prod RESYNC repo, but citool uses normal sfiles.
# There is no deep nest file in the RESYNC.  Possibly that's the bug.
# Too, but not having one, it doesn't need to be maintained when we
# support renames.  Or maybe it can be setup before calling citool.
# Anyway, on to the bug setup ...
# 
# Create a case where there is a deep nest in the prod RESYNC
#
nested project
bk setup -f gcc/deepnest
touch foo bar gcc/foo gcc/deepnest/foo
bk new $Q foo bar gcc/foo gcc/deepnest/foo
bk commit $Q -yfoo
bk clone $Q . ../copy
bk edit $Q foo bar gcc/foo gcc/deepnest/foo
echo project > foo
bk delta $Q -fyremote foo bar gcc/foo gcc/deepnest/foo
bk commit $Q -yremote
cd ../copy
bk edit $Q foo bar gcc/foo gcc/deepnest/foo
echo local > foo
bk delta $Q -fylocal foo bar gcc/foo gcc/deepnest/foo
bk commit $Q -ycopy
#
# do the pull and resolve the local conflict, setting up citool -R
#
bk pull $Q -R
cd RESYNC
bk edit $Q -M foo
echo merge > foo
echo do the merge | bk cfile save foo
cd ..
echo OK

set -x
bk --cd=RESYNC changes -end:I: > WANT
bk resolve $Q -a foo
bk --cd=RESYNC changes -end:I: > GOT
cmpfiles WANT GOT
echo This will fail and it should. It gives a message that work is in progress
bk repocheck || true
bk resolve $Q -a
echo This should work
bk repocheck
