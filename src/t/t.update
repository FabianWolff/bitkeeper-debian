# Copyright 2004-2006,2009 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Tests for pull -u
echo $N Create initial repositories .................................$NL
commercial project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
echo foo > foo
bk new $Q foo
bk commit $Q -yfoo
cd "$HERE"
bk clone $Q project clone
bk clone $Q project tag
bk clone $Q project cset
cd "$HERE/project"
echo bar > bar
bk new $Q bar
bk commit $Q -ybar
bk edit $Q bar
bk delta $Q -ybar bar
bk commit $Q -ybar
echo OK

echo $N Try to update with a local cset .............................$NL
cd "$HERE/cset"
echo whatever > whatever
bk new $Q whatever
bk commit $Q -ywhatever
bk pull -u > OUT 2>&1
grep -q 'Not updating due to the following' OUT || {
	echo Wrong error message
	cat OUT
	exit 1
}
echo OK

echo $N Try to update with a local tag ..............................$NL
cd "$HERE/tag"
bk tag $Q local_tag
bk pull -u > OUT 2>&1
grep -q 'Not updating due to the following' OUT || {
	echo Wrong error message
	cat OUT
	exit 1
}
echo OK

echo $N Try to update with a local cset and local tag ...............$NL
cd "$HERE/cset"
bk tag $Q tag2
bk pull -u > OUT 2>&1
grep -q 'Not updating due to the following' OUT || {
	echo Wrong error message
	cat OUT
	exit 1
}
grep -q 'TAG: tag2' OUT || {
      echo failed to display local changes
      cat OUT
      exit 1
}
echo OK

echo $N Try to update successfully ..................................$NL
cd "$HERE/clone"
bk pull -u > OUT 2>&1
grep -q 'Not updating due to the following' OUT && {
	echo Wrong error message
	cat OUT
	exit 1
}
echo OK
