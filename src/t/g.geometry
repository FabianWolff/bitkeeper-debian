# Copyright 2006 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Create a repository and populate it..........................$NL
commercial project
echo "file1" > file1
echo "file2" > file2
bk new $Q file1
bk new $Q file2
bk commit $Q -y"New files"
bk edit $Q file1 file2
echo "more stuff" >> file1
echo "more stuff" >> file2
echo OK

echo $N Bogus geometry, normal case [citool].........................$NL
unset _BK_GEOM
bk guitest >"`bk dotbk`/ci.rc" 2>&1 <<'EOF'
	set sw [winfo screenwidth .]
	set sh [winfo screenheight .]
	set res "${sw}x${sh}"
	set x [expr {$sw + 100}]
	set y [expr {$sh + 100}]
	puts "data format version 1.0"
	puts "define geometry@$res ${res}+${x}+${y}"
	exit 0
EOF
bk guitest citool >OUT 2>&1 <<'EOF'
	set top .citool
	if {[test_isvisible $top 1] != 1} {
		puts "Window not fully visible [test_geometry $top]"
		exit 1
	}
	exit 0
EOF
if [ $? -ne 0 ]; then echo failed; cat OUT; exit 1; fi
if [ -s OUT ] ; then echo failed; cat OUT; exit 1; fi
echo OK

echo $N GUI offscreen, naive user [csettool].........................$NL
unset _BK_GEOM
bk guitest >"`bk dotbk`/cset.rc" 2>&1 <<'EOF'
	set sw [winfo screenwidth .]
	set sh [winfo screenheight .]
	set res "${sw}x${sh}"
	set x [expr {int($sw / 2)}]
	set y [expr {int($sh / 2)}]
	puts "data format version 1.0"
	puts "define geometry@$res ${res}+${x}+${y}"
	exit 0
EOF
bk guitest csettool >OUT 2>&1 <<'EOF'
	if {[test_isvisible . 1] != 1} {
		puts "Window not fully visible [test_geometry .]"
		exit 1
	}
	exit 0
EOF
if [ $? -ne 0 ]; then echo failed; cat OUT; exit 1; fi
if [ -s OUT ] ; then echo failed; cat OUT; exit 1; fi
echo OK

echo $N GUI slightly offscreen, expert user [difftool]...............$NL
unset _BK_GEOM
bk guitest >"`bk dotbk`/diff.rc" 2>&1 <<'EOF'
	set sw [winfo screenwidth .]
	set sh [winfo screenheight .]
	set res "${sw}x${sh}"
	set x [expr {int($sw / 2)}]
	set y [expr {int($sh / 2)}]
	puts "data format version 1.0"
	puts "define geometry@$res ${res}+${x}+${y}"
	exit 0
EOF
export BK_GUI_OFFSCREEN=1
bk guitest difftool >OUT 2>&1 <<'EOF'
	if {[test_isvisible . 0] != 1} {
		puts "Window not at least partially visible \
		    [test_geometry .]"
		exit 1
	}
	exit 0
EOF
if [ $? -ne 0 ]; then echo failed; cat OUT; exit 1; fi
if [ -s OUT ] ; then echo failed; cat OUT; exit 1; fi
echo OK

echo $N Negative geometry [fm3tool]..................................$NL
unset _BK_GEOM
unset BK_GUI_OFFSCREEN
bk guitest >"`bk dotbk`/fm3.rc" 2>&1 <<'EOF'
	set sw [winfo screenwidth .]
	set sh [winfo screenheight .]
	set res "${sw}x${sh}"
	set x [expr {0 - int($sw / 2)}]
	set y [expr {0 - int($sh / 2)}]
	puts "data format version 1.0"
	puts "define geometry@$res ${res}+${x}+${y}"
	exit 0
EOF
bk guitest fm3tool -l1.1 -r1.1 file1 >OUT 2>&1 <<'EOF'
	if {[test_isvisible . 1] != 1} {
		puts "Window not fully visible \
		    [test_geometry .]"
		exit 1
	}
	exit 0
EOF
if [ $? -ne 0 ]; then echo failed; cat OUT; exit 1; fi
if [ -s OUT ] ; then echo failed; cat OUT; exit 1; fi
echo OK

echo $N Double negative geometry [revtool]...........................$NL
unset _BK_GEOM
export BK_GUI_OFFSCREEN=1
bk guitest >"`bk dotbk`/rev.rc" 2>&1 <<'EOF'
	set sw [winfo screenwidth .]
	set sh [winfo screenheight .]
	set res "${sw}x${sh}"
	set x [expr {0 - int($sw / 2)}]
	set y [expr {0 - int($sh / 2)}]
	puts "data format version 1.0"
	puts "define geometry@$res ${res}-${x}-${y}"
	exit 0
EOF
bk guitest revtool >OUT 2>&1 <<'EOF'
	if {[test_isvisible . 0] != 1} {
		puts "Window not at least partially visible \
		    [test_geometry .]"
		exit 1
	}
	exit 0
EOF
if [ $? -ne 0 ]; then echo failed; cat OUT; exit 1; fi
if [ -s OUT ] ; then echo failed; cat OUT; exit 1; fi
echo OK
