# Copyright 2001-2003,2005-2006,2009 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#because some proxy disallow proxy to localhost
unsetHttpProxy

echo $N Create initial repository ...................................$NL
commercial project
if [ ! -d BitKeeper/etc ]; then echo failed to make BitKeeper/etc; exit 1; fi
if bk _test ! -f SCCS/s.ChangeSet; then echo failed to make ChangeSet; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo files are pending; bk pending; exit 1; fi
mkdir src
cd src
echo foo > 'F!O#O$ B%A^R&RR(R)RR'
echo bar > bar.c
echo h > h.h
bk ci $Q -i 'F!O#O$ B%A^R&RR(R)RR' bar.c h.h
if bk _test ! -f SCCS/s.'F!O#O$ B%A^R&RR(R)RR'; then echo failed to create history; exit 1; fi
P=`bk pending | wc -l`
if [ $P -ne 15 ]; then echo wrong pending result $P; bk pending; exit 1; fi
bk commit $S -yCset
P=`bk pending | wc -l`
if [ $P -ne 0 ]; then echo failed to clear pending list; bk pending; exit 1; fi
bk level 3
echo OK
cores

# In this test we call the rclone code via the bk clone interface
echo $N rcheck via bk:// ............................................$NL
cd "$HERE"
rm -rf copy copy2
bk bkd -q -aPORT -ikill || fail
P=`cat PORT`
bk clone $Q "$HERE/project" bk://localhost:$P/"$HERE/copy"
bk _test -f copy/src/SCCS/s.'F!O#O$ B%A^R&RR(R)RR' || { echo failed; exit 1; }
cd "$HERE/project"
bk rcheck bk://localhost:$P/"$HERE/copy" || { echo failed; exit 1; }
# force a error
bk _rm "$HERE/copy/src/SCCS/s."'F!O#O$ B%A^R&RR(R)RR'
cd "$HERE/project"
bk rcheck bk://localhost:$P/"$HERE/copy" |
    grep -q 'Missing file (bk help chk3) bk/.*@bk_regression.bk' || {
	echo failed with bad output
	bk rcheck bk://localhost:$P/"$HERE/copy" 
	exit 1
}
bk rcheck bk://localhost:$P/"$HERE/copy" > /dev/null
if [ $? -eq 0 ]; then echo failed; exit 1; fi
echo OK
echo $N rcheck via http:// ..........................................$NL
cd "$HERE"
bk clone $Q "$HERE/project" http://localhost:$P/"$HERE/copy2"
bk _test -f copy2/src/SCCS/s.'F!O#O$ B%A^R&RR(R)RR' || { echo failed; exit 1; }
cd "$HERE/project"
bk rcheck http://localhost:$P/"$HERE/copy2" || { echo failed; exit 1; }
# force a error
bk _rm "$HERE/copy2/src/SCCS/s."'F!O#O$ B%A^R&RR(R)RR'
bk rcheck http://localhost:$P/"$HERE/copy2" |
    grep -q 'Missing file (bk help chk3) bk/.*@bk_regression.bk' || {
	echo failed with bad output
	bk rcheck http://localhost:$P/"$HERE/copy" 
	exit 1
}
if [ $? -ne 0 ]; then echo failed; exit 1; fi
bk rcheck http://localhost:$P/"$HERE/copy2" > /dev/null
if [ $? -eq 0 ]; then echo failed; exit 1; fi
bk _kill bk://localhost:$P || fail
echo OK
# TODO test virtual host/root support
