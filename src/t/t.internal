# Copyright 2006 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# testing of internal interfaces


echo $N Test spawn_filterPipeline w 1 filter and no errors ..........$NL
cat <<EOF > IN
1
2
3
4
EOF
cat <<EOF > TESTS
bk _filtertest1 a
EOF
bk _filtertest2 IN TESTS > GOT 2>ERR || {
	echo bad exit
	cat GOT
	cat ERR
	exit 1
}
cat <<EOF > WANT
start a
end a rc=0 (i8 o16)
spawn_filterPipeline returned 0
EOF
cmpfiles ERR WANT
cat <<EOF > WANT
a 1
a 2
a 3
a 4
EOF
cmpfiles GOT WANT
echo OK

echo $N Test spawn_filterPipeline w 4 filters and no error ..........$NL
cat <<EOF > TESTS
bk _filtertest1 a
bk _filtertest1 b
bk _filtertest1 c
bk _filtertest1 d
EOF
bk _filtertest2 IN TESTS > GOT 2>ERR || {
	echo bad exit
	cat GOT
	cat ERR
	exit 1
}
cat <<EOF > WANT
start a
end a rc=0 (i8 o16)
start b
end b rc=0 (i16 o24)
start c
end c rc=0 (i24 o32)
start d
end d rc=0 (i32 o40)
spawn_filterPipeline returned 0
EOF
cmpfiles ERR WANT
cat <<EOF > WANT
d c b a 1
d c b a 2
d c b a 3
d c b a 4
EOF
cmpfiles GOT WANT
echo OK

echo $N Test spawn_filterPipeline ending early ......................$NL
cat <<EOF > TESTS
bk _filtertest1 a
bk _filtertest1 -e 2 b
bk _filtertest1 -e 0 c
bk _filtertest1 d
EOF
bk _filtertest2 IN TESTS > GOT 2>ERR || {
	echo bad exit
	cat GOT
	cat ERR
	exit 1
}
cat <<EOF > WANT
start a
end a rc=0 (i8 o16)
start b
end b rc=0 (i12 o12)
start c
end c rc=0 (i6 o0)
spawn_filterPipeline returned 0
EOF
cmpfiles ERR WANT
cat <<EOF > WANT
EOF
cmpfiles GOT WANT
cat <<EOF > TESTS
bk _filtertest1 -e 0 a
bk _filtertest1 b
bk _filtertest1 c
bk _filtertest1 d
EOF
bk _filtertest2 IN TESTS > GOT 2>ERR || {
	echo bad exit
	cat GOT
	cat ERR
	exit 1
}
cat <<EOF > WANT
start a
end a rc=0 (i2 o0)
spawn_filterPipeline returned 0
EOF
cmpfiles ERR WANT
cat <<EOF > WANT
EOF
cmpfiles GOT WANT
echo OK

echo $N Test spawn_filterPipeline error cases .......................$NL
cat <<EOF > TESTS
bk _filtertest1 -r 1 a
bk _filtertest1 -r 2 b
bk _filtertest1 -r 3 c
bk _filtertest1 -r 4 d
EOF
bk _filtertest2 IN TESTS > GOT 2>ERR || {
	echo bad exit
	cat GOT
	cat ERR
	exit 1
}
cat <<EOF > WANT
start a
end a rc=1 (i8 o16)
start b
end b rc=2 (i16 o24)
start c
end c rc=3 (i24 o32)
start d
end d rc=4 (i32 o40)
spawn_filterPipeline returned 1
EOF
cmpfiles ERR WANT
cat <<EOF > WANT
d c b a 1
d c b a 2
d c b a 3
d c b a 4
EOF
cmpfiles GOT WANT

cat <<EOF > TESTS
bk _filtertest1 a
bk _filtertest1 -r 2 b
bk _filtertest1 -r 3 c
bk _filtertest1 -r 4 d
EOF
bk _filtertest2 IN TESTS > GOT 2>ERR || {
	echo bad exit
	cat GOT
	cat ERR
	exit 1
}
cat <<EOF > WANT
start a
end a rc=0 (i8 o16)
start b
end b rc=2 (i16 o24)
start c
end c rc=3 (i24 o32)
start d
end d rc=4 (i32 o40)
spawn_filterPipeline returned 2
EOF
cmpfiles ERR WANT
cat <<EOF > WANT
d c b a 1
d c b a 2
d c b a 3
d c b a 4
EOF
cmpfiles GOT WANT

cat <<EOF > TESTS
bk _filtertest1 -r 1 -e 0 a
bk _filtertest1 -r 2 b
bk _filtertest1 -r 3 c
bk _filtertest1 -r 4 d
EOF
bk _filtertest2 IN TESTS > GOT 2>ERR || {
	echo bad exit
	cat GOT
	cat ERR
	exit 1
}
cat <<EOF > WANT
start a
end a rc=1 (i2 o0)
spawn_filterPipeline returned 1
EOF
cmpfiles ERR WANT
cat <<EOF > WANT
EOF
cmpfiles GOT WANT
echo OK
