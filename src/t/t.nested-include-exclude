# Copyright 2015 BitMover, Inc

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

echo $N Do cset -x+ while in a product with some file unclean .......$NL
nested project
touch last
echo base > gcc/foo
bk new $Q -l gcc/foo last
bk commit $Q -f
echo newfile > gdb/bar
echo delta > gcc/foo
bk delta $Q -al -fydelta gcc/foo last gdb/bar
bk commit $Q -f
bk clone $Q -s. . ../product
echo modified > last
bk cset -x+ 2> ERR && fail -f ERR
grep -q "Successfully cleaned up all files." ERR || fail -f ERR
echo OK

echo $N Do cset -x+ while in a product ..............................$NL
bk unedit last
bk cset $Q -Sx+ || fail
bk get $Q gcc/foo
grep -q base gcc/foo || fail wrong contents
echo OK

echo $N Sane msg when cset -x in a repo with a unpop comp ...........$NL
cd "$HERE/product"
bk cset -x+ 2> ERR && fail -f ERR
# Because rootkeys don't have comp path, cmpkeys still gives random results
bk _sort < ERR > GOT
cat <<EOF > WANT


!!! Cset operation failed.  Undoing changes... !!!
Component 'gcc' not populated.  Populate and try again.
Component 'gdb' not populated.  Populate and try again.
Successfully cleaned up all files.
EOF
cmpfiles WANT GOT
echo OK

echo $N Test a poly cset -x .........................................$NL
cd "$HERE"
commercial comp
echo old > foo
bk new $Q -l foo
bk commit $Q -yfoo
cd ..
nested nest
echo 'poly: on!' >> ../.bk/config
bk attach $Q ../comp comp
cd ../comp
bk edit $Q foo
echo mid > foo
bk delta $Q -ymid foo
bk commit $Q -yfoo
bk tag $Q step1
bk edit $Q foo
echo new > foo
bk delta $Q -ynew foo
bk commit $Q -yfoo
bk tag $Q step2
cd ../nest
bk clone $Q . ../copy
bk --cd=comp port $Q -rstep1 "$HERE/comp"
bk --cd=comp port $Q -rstep2 "$HERE/comp"
bk tag $Q yourport
cd ../copy
bk portal $Q .
bk --cd=comp port $Q "$HERE/comp"
bk tag $Q myport
bk pull $Q
bk edit $Q -x+ comp/foo
bk delta $Q -yx+ comp/foo
bk commit $Q -yexfoo
bk cset $Q -xmyport
bk cset $Q -xyourport
bk prs -hnd':DS: :DI:' comp/foo > GOT
cat <<EOF > WANT
7 -4
6 -4,3
5 -4
4 
3 
2 
EOF
cmpfiles WANT GOT
echo OK

# Test ported over from t.nested
echo $N Make sure cset -x works in components and product ...........$NL
cd "$HERE/project"
bk setup gcc4
bk gate $Q -r
bk portal $Q -r
# make a couple of csets in components
echo "aline" > afile
bk new $Q afile
cd gdb
echo "aline" > afile
bk new $Q afile
bk commit -S $Q -y"add afile"
cd ../gcc4
echo "aline" > afile
bk new $Q afile
bk commit -S $Q -y"add afile"
cd ..
bk commit $Q -y"added afile to gdb and gcc4"
# add a content cset since cset -x doesn't support removing new files
bk edit $Q afile
echo "lineb" >> afile
bk delta $Q -y"add lineb" afile
cd gdb
bk edit $Q afile
echo "lineb" >> afile
bk delta $Q -y"add lineb" afile
bk commit -S $Q -y"add lineb"
cd ../gcc4
bk edit $Q afile
echo "lineb" >> afile
bk delta $Q -y"add lineb" afile
bk commit -S $Q -y"add lineb"
cd ..
bk commit $Q -y"add lineb"
CSET=`bk changes -nd:KEY: -r+`
# add another cset on top
bk edit $Q afile
echo "linec" >> afile
bk delta $Q -y"add linec"
cd gdb
bk edit $Q afile
echo "linec" >> afile
bk delta $Q -y"add linec" afile
bk commit -S $Q -y"add linec"
cd ../gcc4
bk edit $Q afile
echo "linec" >> afile
bk delta $Q -y"add linec" afile
bk commit -S $Q -y"add linec"
cd ..
bk commit $Q -y"add linec"
# okay, now test the cset -x
# in the component, it should work
cd gdb
bk cset -qSx+ >OUT 2>&1 || fail -f OUT
# clean it up
bk undo -qSsfr+ >OUT 2>&1 || fail -f OUT
# in the product it should pass (no cd; it will go to product)
bk cset $Q -x"$CSET" || fail
bk -e -r check -ac || fail
# calling without -S from comp => product
bk changes -nd':COMMENTS:' -r+ | grep -q "Cset exclude" || fail
# calling with -S from comp => comp
bk changes -Snd':COMMENTS:' -r+ | grep -q "Cset exclude" || fail
cd ..
bk -U grep -n lineb > OUT && fail -f OUT exclude did not work
echo OK
